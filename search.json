[{"title":"gitlab项目在GitHub上的同步更新","url":"/2021/03/09/gitlab项目在GitHub上的同步更新/","content":"\n### 为什么想要这么做\n\n上班后，公司使用gitlab来托管项目，但是自己也想继续在GitHub上同步更新项目，倒是可以在一台设备同时配置GitHub和gitlab，但是配置过程非常的劝退。因此，记录下这个方便简单的方法。\n\n### 开始\n\n#### 准备工作\n\n拥有gitlab和GitHub账号，同时在自己的设备上[下载安装Git](https://git-scm.com/downloads)，配置好用户名、邮箱和SSH Key\n\n#### 首先上传本地项目至gitlab\n\n这里顺序很重要，必须是先上传本地项目到gitlab。\n\n1. 新建项目\n\n![image-20210309135732486](https://raw.githubusercontent.com/GarfieldCCC/cloudImg/master/img/20210309135732.png)\n\n\n\n\n\n![image-20210309135927313](https://raw.githubusercontent.com/GarfieldCCC/cloudImg/master/img/20210309135927.png)\n\n2. 根据提示上传本地项目\n\n   新建成功后，会有各种类型上传项目的代码，根据提示一步步进行即可。\n\n#### 在GitHub上新建项目\n\n新建的步骤类似，记住也要勾选public\n\n![image-20210309140333137](https://raw.githubusercontent.com/GarfieldCCC/cloudImg/master/img/20210309140333.png)\n\n#### 复制这个链接\n\n![image-20210309140540932](https://raw.githubusercontent.com/GarfieldCCC/cloudImg/master/img/20210309140541.png)\n\n#### 回到gitlab刚刚新建的那个项目\n\n左边拉到下面->Settings->Repository，展开`Mirroring repositories`，复制刚刚的地址\n\n![image-20210309141057253](https://raw.githubusercontent.com/GarfieldCCC/cloudImg/master/img/20210309141057.png)\n\n**注意！！**不是复制完就完事了，要再加上自己GitHub的用户名，如下：\n\n![image-20210309141235992](https://raw.githubusercontent.com/GarfieldCCC/cloudImg/master/img/20210309141236.png)\n\n然后，拉到下面，填写自己GitHub的密码，点击`Mirror repository`，这时你已经完成95%\n\n![image-20210309141414937](https://raw.githubusercontent.com/GarfieldCCC/cloudImg/master/img/20210309141415.png)\n\n#### 同步更新\n\n一般来说只要commit一次到gitlab便会自动同步至GitHub，但是不可避免会出现延迟导致的失败，如果你不放心，可以手动同步\n\n![image-20210309141549694](https://raw.githubusercontent.com/GarfieldCCC/cloudImg/master/img/20210309141549.png)\n\n### 完毕，感谢阅读\n\n\n\n","tags":["知识"],"categories":["Git"]},{"title":"Install MySQL on CentOS","url":"/2021/03/05/Install-MySQL-on-CentOS/","content":"\n### CentOS7 MySQL数据库安装和配置\n\n#### 一、系统环境\n\n`yum update`升级以后的系统版本为：\n\n```shell\n[root@localhost garfield]# cat /etc.redhat-release\nCentOS Linux release 7.8.2003(core)\n```\n\n#### 二、MySQL安装\n\n依次输入下列命令进行安装。\n\n```shell\n# yum install mysql\n# yum install mysql-devel\n# yum install mysql-server\n```\n\n安装mysql和mysql-devel都成功，但是安装mysql-server失败，如下：\n\n```shell\n[root@localhost garfield]# yum install mysql-server\nLoaded plugins: fastestmirror\nLoading mirror speeds from cached hostfile\n * base: mirrors.sina.cn\n * extras: mirrors.sina.cn\n * updates: mirrors.sina.cn\nNo package mysql-server available.\nError: Nothing to do\n```\n\n原因是CentOS7版本将MySQL数据库软件从默认的程序列表中移除，用mariadb代替了。下面给出解决方法：\n\n##### 官网下载安装mysql-server\n\n依次输入下列命令：\n\n```shell\n# wget http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm\n# rpm -ivh mysql-community-release-el7-5.noarch.rpm\n# yum install mysql-community-server\n```\n\n安装成功后重启MySQL服务。\n\n```shell\n# service mysqld restart\n```\n\n初次安装MySQL，root账户没有密码。\n\n```shell\n[root@localhost garfield]# mysql -u root \nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 3\nServer version: 5.6.26 MySQL Community Server (GPL)\n\nCopyright (c) 2000, 2015, Oracle and/or its affiliates. All rights reserved.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nmysql> show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| mysql              |\n| performance_schema |\n| test               |\n+--------------------+\n4 rows in set (0.01 sec)\n\nmysql>\n```\n\n设置密码。\n\n```mysql\nmysql> set password for 'root'@'localhost' =password('password');\nQuery OK, 0 rows affected (0.00 sec)\n```\n\n安装完以后，mariadb自动被替换，将不再生效，使用下列的命令将其移除：\n\n```shell\n[root@localhost garfield]# rpm -qa |gerp mariadb\n```\n\n#### 三、配置MySQL\n\n##### 1. 编码\n\nMySQL配置文件为/etc/my.cnf\n\n最后加上编码配置。\n\n```shell\n[mysql]\ndefault-character-set =utf8\n```\n\n##### 2. 远程连接设置\n\n把在所有数据库的所有表的所有权限赋值给位于所有IP地址的root用户。\n\n```mysql\nmysql> grant all privileges on *.* to root@'%'identified by 'password';\n```\n\n如果是新用户而不是root，则要先新建用户。\n\n```mysql\nmysql>create user 'username'@'%' identified by 'password';\n```\n\n此时就可以进行远程连接了。\n\n","tags":["知识"],"categories":["Linux","MySQL"]},{"title":"有用命令","url":"/2021/03/05/有用命令/","content":"\n记录一些有用的命令\n\n<!-- more -->\n\n### 生成密钥\n\n```shell\n1. 在桌面打开Git Bash Here\n2. git config --global user.name \"yourname\"\n3. git config --global user.email \"youremail\"\n4. ssh-keygen -t rsa -C \"youremail\"\n5. 复制id_rsa.pub内容至公钥\n```\n\n### 查看用户名和邮箱地址\n\n```shell\ngit config user.name\ngit config user.email\n```\n\n### Windows10 开机自启动软件的目录\n\nC:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp","tags":["知识"],"categories":["知识"]},{"title":"Hello World","url":"/2021/03/05/hello-world/","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n<!-- more -->\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n"}]