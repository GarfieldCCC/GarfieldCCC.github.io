[{"title":"Typora+PicGo+SM.MS:打造写文章神器","url":"/post/253d98d2.html","content":"\n\n\n### 前言\n\n之前一直使用`Typora`写文章，但是有一个问题：上传图片的地址为本地地址，如果我的这篇文章换了电脑，所有的图片都无法加载了。因此，为了使文章无论迁移到哪里，图片都可以正常显示，决定将图片上传至云，因此，有了下面这样一个写文章神器。\n\n### 准备工作\n\n> Typora编辑器：https://typora.io/\n>\n> SM.MS图床：https://sm.ms/\n>\n> PicGo：https://github.com/Molunerfinn/PicGo\n>\n> PicGo的SM.MS插件\n\n### 开始\n\n#### 下载安装Typora\n\n`Typora`是一款优秀的跨平台MarkDown编辑器，这一步不难，直接下载安装即可，不过多介绍。\n\n#### 注册登录SM.MS图床\n\n之前一直选择`GitHub`图床，但是图片加载速度太慢，如果不使用加速器，国内访问几乎无法正常加载图片，因此最终选择`SM.MS`，虽然有上传空间限制，但是速度有保障了。\n\n进入`SM.MS`[官网](https://sm.ms/)，点击User->Login注册登录，然后同样的，点击`User`->`Dashboard`->`API Token`，复制自己的`Secret Token`等待使用。\n\n![image-20210409161518830](https://i.loli.net/2021/04/09/qAYW4Ia2QHR3Kbf.png)\n\n#### 安装PicGo及对应插件\n\n进入`PicGo`的`GitHub`，下载对应版本，打开后，安装`SM.MS`插件。\n\n![image-20210409161933606](https://i.loli.net/2021/04/09/8ecx2WDofuOBvdE.png)\n\n然后进入图床设置的SM.MS用户登录，将刚刚复制的Secret Token粘贴到这里。\n\n![image-20210409162110940](https://i.loli.net/2021/04/09/Fbli9WcAHqw7MRI.png)\n\n最后，打开`PicGo设置`->`设置Server`，将监听端口设置为36677。\n\n![image-20210409162149805](https://i.loli.net/2021/04/09/uXIpQy2Ozb9rKAE.png)\n\n#### 配置Typora\n\n打开`Typora`->`文件`->`偏好设置`->`图像`，设置`上传图片`以及`上传规则`，然后设置`上传服务`和`PicGo 路径`，最后点击`验证图片上传选项`看是否成功(若不行，重启软件)。\n\n![image-20210409162355566](https://i.loli.net/2021/04/09/xGJO5XTzoN76rSk.png)\n\n至此，不出意外已经配置成功。\n\n### 效果展示\n\n![PicGo](https://i.loli.net/2021/04/09/WNaFgxQj3YfSL2T.gif)\n\n\n\n\n\n","tags":["Typora","PicGo","SM.MS"],"categories":["记录"]},{"title":"若依-定时任务","url":"/post/ce36139.html","content":"\n\n\n### 使用场景\n\n在实际项目开发中Web应用有一类不可缺少的，那就是定时任务。 定时任务的场景可以说非常广泛，比如某些视频网站，购买会员后，每天会给会员送成长值，每月会给会员送一些电影券； 比如在保证最终一致性的场景中，往往利用定时任务调度进行一些比对工作；比如一些定时需要生成的报表、邮件；比如一些需要定时清理数据的任务等。\n\n### 操作指南\n\n`系统监控`->`定时任务`->`新增`：\n\n![image-20210406112123936](https://i.loli.net/2021/04/06/UAb5aihP6jH4fNF.png)\n\n填写对应的信息，其中需要注意的图中高亮部分需要这么填写：\n\n![image-20210406112322291](https://i.loli.net/2021/04/06/URpG6gbZC3PKuOB.png)\n\n**调用方法**\n\n打开`ruoyi-quartz/src/main/java/com/ruoyi/quartz/task/RyTask.java`，按照代码输入对应的调用方法\n\n![image-20210406112601879](https://i.loli.net/2021/04/06/H7nAOzBgLKf8Tp9.png)\n\n**cron表达式**\n\n参考[官方文档](https://doc.ruoyi.vip/ruoyi/document/htsc.html#%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1)\n\n添加成功后，在`ruoyi-quartz/src/main/java/com/ruoyi/quartz/task/RyTask.java`中添加自己刚才定义的方法\n\n![image-20210406112917442](https://i.loli.net/2021/04/06/1iLXtDSEaPM8Nls.png)\n\n重启项目，测试看看是否成功\n\n![image-20210406113007496](https://i.loli.net/2021/04/06/YhczMuWIXgQwmJ1.png)\n\n","tags":["若依"],"categories":["记录","框架"]},{"title":"ps -ef 命令详解","url":"/post/822b6734.html","content":"\n\n\n`ps`命令将某个进程显示出来\n\n`ps -e` 显示所有程序\n\n`ps f ` 用ASCII字符显示树状结构，表达程序间的相互关系\n\n`grep`命令是查找\n\n中间的`|`是管道命令，是指ps命令与grep同时执行\n\nPS是LINUX下最常用的也是非常强大的进程查看命令\n\ngrep命令是查找，是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹配的行打印出来\n\ngrep全称是Global Regular Expression Print，表示全局正则表达式版本，它的使用权限是所有用户\n\n以下这条命令是检查java 进程是否存在：`ps -ef | grep java`\n\n![image-20210406084450350](https://i.loli.net/2021/04/06/7nLg5ZMalYRKBwX.png)\n\n   UID        PID    PPID    C   STIME   TTY       TIME                   CMD\n\ngarfield   4472  3598    0   08:38   pts/0   00:00:00  grep --color=auto java\n\n> **UID   ：程序被该 UID 所拥有**\n>\n> **PID   ：这个程序的 ID** \n>\n> **PPID  ：是其上级父程序的ID**\n>\n> **C     ：CPU使用的资源百分比**\n>\n> **STIME ：系统启动时间**\n>\n> **TTY   ：登入者的终端机位置**\n>\n> **TIME  ：使用掉的CPU时间**\n>\n> **CMD  ：所下达的是什么指令**\n\n","tags":["Linux"],"categories":["Linux"]},{"title":"GET\\POST\\PUT\\DELETE","url":"/post/7ae04b57.html","content":"\n#### GET\n\nGET请求会向数据库发索取数据的请求，从而来获取信息，**该请求就像数据库的select操作一样**，只是用来查询一下数据，不会修改、增加数据，不会影响资源的内容，即该请求不会产生副作用。无论进行多少次操作，结果都是一样的\n\n#### PUT\n\nPUT请求是向服务器端发送数据的，从而改变信息，**该请求就像数据库的update操作一样**，用来修改数据的内容，但是不会增加数据的种类等，也就是说无论进行多少次PUT操作，其结果并没有不同\n\n#### POST\n\nPOST请求同PUT请求类似，都是向服务器端发送数据的，但是该请求会改变数据的种类等资源，**就像数据库的insert操作一样**，会创建新的内容。几乎目前所有的提交操作都是用POST请求的\n\n#### DELETE\n\nDELETE请求顾名思义，就是用来删除某一个资源的，**该请求就像数据库的delete操作**\n\n","tags":["HTTP"],"categories":["网络","记录"]},{"title":"若依-框架说明书","url":"/post/1bde0d35.html","content":"\n### 这是一篇记录\n\n记录各种可能碰到的操作，分为操作篇和说明篇，操作篇主要记录步骤，说明篇更偏向于代码理解\n\n### 操作篇\n\n#### 字典管理\n\n`系统管理`->`字典管理`->`新增`，输入信息\n\n![image-20210330105618082](https://i.loli.net/2021/03/30/92TSsciK1VpAXze.png)\n\n添加成功后，点击`字典类型`进行详细编辑\n\n![image-20210330105741749](https://i.loli.net/2021/03/30/26xs3Gfy58QpABH.png)\n\n点击`新增`，输入数据字典的信息后保存。这里应该添加多条\n\n![image-20210330110054324](https://i.loli.net/2021/03/30/dERKhuC9jZNkDXL.png)\n\n![image-20210330110112833](https://i.loli.net/2021/03/30/KBrv9gUxEsLWIMa.png)\n\n#### 系统日志\n\n![image-20210406140533971](https://i.loli.net/2021/04/06/ZerWJ1TndUjmBua.png)\n\n如果想要定义自己的日志记录，执行下列步骤：\n\n##### 数据库添加数据\n\n在`sys_dict_data`中，添加一行这样的数据：\n\n```mysql\ninsert into sys_dict_data values (29, 10, '立刻执行', '10', 'sys_oper_type', '', 'primary', 'N', '0', 'admin', sysdate(), '', null, '执行操作');\n```\n\n##### 新增业务操作类型\n\n在`ruoyi-common/src/main/java/com/ruoyi/common/enums/BusinessType.java`中，添加：\n\n```java\n/**\n * 立刻执行\n */\nRUN,\n```\n\n##### 日志标题及类型\n\n在`ruoyi-quartz/src/main/java/com/ruoyi/quartz/controller/SysJobController.java`中，修改日志标题以及日志类型：\n\n```java\n@Log(title = \"定时任务\", businessType = BusinessType.RUN)\n```\n\n##### 添加注解\n\n在`RuoYi-Vue/ruoyi-system/src/main/java/com/ruoyi/system/domain/SysOperLog.java`中：\n\n```java\n@Excel(name = \"业务类型\", readConverterExp = \"0=其它,1=新增,2=修改,3=删除,4=授权,5=导出,6=导入,7=强退,8=生成代码,9=清空数据,10=立刻执行\")\n```\n\n#### 定时任务\n\n[定时任务](http://www.garfielder.com/post/ce36139.html)\n\n\n\n### 说明篇\n\n#### Excel导出时数据字典的值\n\n正常情况下，导出的时候会导出数据库的值，比如\n\n![image-20210330110332229](https://i.loli.net/2021/03/30/63jkQU2DGM8bHmV.png)\n\n性别这一个字段会导出为0，但是当我们需要导出人类可读的信息，比如\n\n![image-20210330110423903](https://i.loli.net/2021/03/30/58H1JisUCoxGdtY.png)\n\n只需要在`ruoyi-system`下的对应模块的`domain`下的代码内，加上注解\n\n```java\n/** 性别 */\n@Excel(name = \"性别\", readConverterExp = \"0=男,1=女,2=未知\")\nprivate Integer gender;\n```\n\n这样就可以导出人类可读的信息比如：性别：男\n\n#### 用户管理\n\n##### 前端页面路径\n\n`ruoyi-ui/src/views/system/user/index.vue`\n\n##### 后端controller\n\n`ruoyi-admin/src/main/java/com/ruoyi/web/controller/system/SysUserController.java`\n\n##### 数据库操作xml\n\n`ruoyi-system/src/main/resources/mapper/system/SysUserMapper.xml`\n\n##### 建议的阅读代码的顺序\n\n![image-20210401142717583](https://i.loli.net/2021/04/01/bh9GiYNotJSf1Ve.png)\n\n按照这个顺序阅读代码可以最好的理解代码\n\n#### 实现当没有选中数据时按钮无法点击\n\n效果如下：\n\n![image-20210331131141197](https://i.loli.net/2021/03/31/fLDzgJ91QXbVYFx.png)\n\n代码分析：\n\n`index.vue`\n\n![image-20210331131313332](https://i.loli.net/2021/03/31/GWZa4HQjEfpibqo.png)\n\n![image-20210331131410796](https://i.loli.net/2021/03/31/VLuTOlgQzpkNWyG.png)\n\n\n\n#### 弹窗开启/关闭\n\n```javascript\nthis.open = true;\t\t\t# 弹窗开启\nthis.open = false;\t\t\t# 弹窗关闭\n```\n\n这里的`open`要对应\n\n![image-20210402091811145](https://i.loli.net/2021/04/02/6lZqo9jvPLQIODF.png)\n\n\n\n#### 新增时包含修改时不包含\n\n效果如下：\n\n![image-20210401091700450](https://i.loli.net/2021/04/01/8vQ3ght1irHY6Go.png)\n\n具体代码：\n\n在`index.vue`中\n\n![image-20210401092244727](https://i.loli.net/2021/04/01/n5jLS3D9uimE8wP.png)\n\nv-if：条件，如果`userId`未定义，说明是新增，将显示整个`el-form-item`；反之，证明已经存在这个`userId`的数据，将隐藏整个`el-form-item`。\n\n\n\n#### :expand-on-click-node\n\n当`:expand-on-click-node=\"false\"`时，展开节点的同时无法触发节点事件，如下：\n\n![false](https://i.loli.net/2021/04/01/td4A5e2kTREylib.gif)\n\n当`:expand-on-click-node=\"true\"`时，展开节点的同时触发节点事件，如下：\n\n![true](https://i.loli.net/2021/04/01/eL5HqPyJV1U7QDB.gif)\n\n\n\n#### 数据包分析\n\n右键，打开浏览器的`检查`，切换到`Network`，刷新用户管理页面，选择`XHR`:\n\n![image-20210401114035810](https://i.loli.net/2021/04/01/xK2U6AmOa5RVG3t.png)\n\n最下面的三个数据包名称对应于`ry20210210.sql`中的`dict_type`字段\n\n![image-20210401114352011](https://i.loli.net/2021/04/01/do4LqOXxI83P9wn.png)\n\n然后在`index.vue`中获取到数据\n\n![image-20210401114513648](https://i.loli.net/2021/04/01/lTXUM7NQH6oVpZL.png)\n\n\n\n#### 表单解读\n\n`<el-form>`：代表这是一个表单\n`<el-form> -> ref`：表单被引用时的名称，标识\n`<el-form> -> rules`：表单验证规则\n`<el-form> -> model`：表单数据对象\n`<el-form> -> label-width`：表单域标签的宽度，作为 Form 直接子元素的 form-item 会继承该值\n`<el-form> -> <el-form-item>`：表单中的每一项子元素\n`<el-form-item> -> label`：标签文本\n`<el-form-item> -> prop`：表单域 model 字段，在使用 validate、resetFields 方法的情况下，该属性是必填的\n`<el-input>`：输入框\n`<el-input> -> v-model`：绑定的表单数据对象属性\n`<el-input> -> style`：行内样式\n`<el-input> -> maxlength`：最大字符长度限制\n\n\n\n#### 回车触发聚焦@keyup.enter.native\n\n顾名思义，按下回车键后触发的事件，给出代码示例：\n\n前端代码：\n\n```vue\n<el-input\n    v-model=\"queryParams.roleName\"\n    placeholder=\"请输入角色名称\"\n    clearable\n    size=\"small\"\n    style=\"width: 240px\"\n    @keyup.enter.native=\"handleQuery\"\n/>\n```\n\n按下回车会触发`handleQuery`方法\n\n```javascript\nhandleQuery() {\n    this.queryParams.pageNum = 1;\n    this.getList();\n}\n```\n\n#### 分配数据权限代码解读\n\n![image-20210402081714310](https://i.loli.net/2021/04/02/uChaqEQpxV6XHyw.png)\n\n##### .then()方法\n\nthen()方法只有在[Promise对象](https://www.runoob.com/w3cnote/javascript-promise-object.html)中才有，异步执行，就是当.then()前的方法执行完后再执行then()内部的程序，这样就避免了，数据没获取到等的问题\n\n##### res => {}\n\n在`ES6`中被定义为箭头函数\n\n```javascript\nvar f = v => v;\n//等同于\nvar f = function(v) {\n    return v;\n}\n```\n\n```javascript\nvar f = () = 5\n//等同于\nvar f = function() {\n    return 5;\n}\n```\n\n##### $nextTick()\n\n在下次 DOM 更新循环结束之后执行延迟回调。在修改数据之后立即使用这个方法，获取更新后的 DOM\n\n#### 定义数据包字段\n\n数据包字段的定义在对应的`.xml`文件中，以数据字典为例：\n\n![image-20210402113530478](https://i.loli.net/2021/04/02/myBDM7fWQlpu4Gt.png)\n\n在`ruoyi-system/src/main/resources/mapper/system/SysDictDataMapper.xml`\n\n![image-20210402113709295](https://i.loli.net/2021/04/02/7UnxX5Y8AD1orNj.png)\n\n","tags":["若依","Vue","SpringBoot"],"categories":["记录","框架"]},{"title":"CentOS7离线安装mysql5.7","url":"/post/a62133b2.html","content":"\n### 环境准备\n\nCentOS7  + MySQL5.7\n\n### 下载离线安装包\n\nMySQL5.7 Linux安装包[官网下载](https://dev.mysql.com/downloads/mysql)地址\n\n注意选择版本\n\n![image-20210330083308801](https://i.loli.net/2021/03/30/qvpCUmXLhjld3nb.png)\n\n### 解压安装包\n\n进入/home目录，使用`mkdir mysql`命令新建一个名为`mysql`的目录，将下载的包复制到`mysql`目录下，打开终端解压之\n\n```shell\ntar -xf mysql-5.7.27-1.el7.x86_64.rpm-bundle.tar\n```\n\n### 查询并卸载系统自带的Mariadb\n\n```shell\nrpm -qa | grep mariadb\nrpm -e --nodeps 文件名\n```\n\n### 查询并卸载老旧版本MySQL\n\n```shell\nrpm -qa | grep mysql\nrpm -e --nodeps 文件名\n```\n\n### 安装\n\n#### 使用rpm安装\n\n```shell\nrpm -ivh mysql-community-common-5.7.27-1.el7.x86_64.rpm\n\nrpm -ivh mysql-community-libs-5.7.27-1.el7.x86_64.rpm\n\nrpm -ivh mysql-community-devel-5.7.27-1.el7.x86_64.rpm\n\nrpm -ivh mysql-community-libs-compat-5.7.27-1.el7.x86_64.rpm\n\nrpm -ivh mysql-community-client-5.7.27-1.el7.x86_64.rpm\n\nrpm -ivh mysql-community-server-5.7.27-1.el7.x86_64.rpm\n```\n\n#### 启用MySQL服务\n\n查看MySQL服务是否启动 `service mysqld status`\n\n启动服务 `systemctl start mysqld`\n\n#### 重置root密码\n\nMySQL5.7会在安装后为root用户生成一个随机密码，而不是像以往版本的空密码。 可以安全模式修改root登录密码或者用随机密码登录修改密码。下面用随机密码方式\nMySQL为root用户生成的随机密码通过`mysqld.log`文件可以查找到：\n\n![image-20210330090112491](https://i.loli.net/2021/03/30/CsOvAeqrb8ih2ck.png)\n\n```mysql\nmysql -u root -p\nmysql> Enter password: （输入刚才查询到的随机密码）\nmysql> SET PASSWORD FOR 'root'@'localhost'= \"yourpwd\";\nmysql> exit\n```\n\nMySQL的密码策略比较复杂，要大小写，过于简单的密码会被拒绝\n\n#### 上述方法无法修改的备用方案\n\n关闭服务，修改mysql配置文件:\n\n```shell\nsystemctl stop mysqld.service\nvi /etc/my.cnf\n```\n\nmysqld下面添加`skip-grant-tables`保存退出启动服务(如图)\n\n![image-20210330090643933](https://i.loli.net/2021/03/30/mWK75aMlucIJBoe.png)\n\n```shell\nsystemctl start mysqld.service\n```\n\n修改root密码\n\n```mysql\nmysql -u root  # 刚才添加了skip，这种情况下不需要密码直接回车\nuse mysql   # 指定库\n\nupdate user set authentication_string=password('yourpwd') where user='root' and host='localhost';\nflush privileges; # 清空权限表缓存\nexit;\n```\n\n`vi /etc/my.cnf` ，把 `skip-grant-tables` 这句删除保存退出重启mysql服务，恢复密码登录\n\n```shell\nsystemctl restart mysqld.service\n```\n\n#### 自定义密码登录\n\n```mysql\nmysql -u root –p\nyourpwd\n```\n\n#### 开放外部网段访问3306端口\n\n```mysql\nmysql>GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY 'yourpwd' WITH GRANT OPTION;\n\nmysql>FLUSH PRIVILEGES;\n\nmysql>exit;\n```\n\n\n\n\n\n","tags":["知识","Linux","MySQL"],"categories":["Linux","MySQL"]},{"title":"若依-代码生成","url":"/post/a24d1725.html","content":"\n### 创建数据表\n\n```mysql\nDROP TABLE if EXISTS student;\nCREATE TABLE student(\n\tid int NOT NULL auto_increment COMMENT 'id',\n\tname varchar(20) NOT NULL      COMMENT '姓名',\n\tage\tint COMMENT '年龄',\n\tgender int COMMENT '性别',\n\tcreator VARCHAR(20) COMMENT '创建者',\n\tcreate_time datetime COMMENT '创建时间',\n\tstatus VARCHAR(2) COMMENT '数据状态',\n\tdel_flag VARCHAR(2) COMMENT '删除标志',\n\tPRIMARY key(id)\n)ENGINE=INNODB COMMENT '学生表';\n```\n\n### 生成代码\n\n#### 导入表\n\n系统工具->代码生成->导入->选中需要导入的表->确定\n\n![image-20210329110653729](https://i.loli.net/2021/03/29/p51RmcgnYawJ82b.png)\n\n#### 修改生成配置\n\n![image-20210329110821618](https://i.loli.net/2021/03/29/nUwdMRtY9fAs3gJ.png)\n\n#### 生成代码\n\n![image-20210329110929248](https://i.loli.net/2021/03/29/GWp9UQKkmDqyTJZ.png)\n\n### 导入代码到项目中\n\n#### 生成菜单\n\n生成代码中有个`studentMenu.sql`文件，在数据库中运行一遍文件中，将新模块加入到项目的菜单中\n\n#### 文件导入\n\n将`StudentController.java`放入`ruoyi-admin`模块的`controller`目录下的`student`包内\n\n![image-20210329112309205](https://i.loli.net/2021/03/29/m4LWPi1oKSCgshd.png)\n\n将`domain`、`mapper`、`service`包放入`ruoyi-system`模块的`student`(需要手动新建)包内\n\n![image-20210329112337966](https://i.loli.net/2021/03/29/53dWBpLhnqjbDvf.png)\n\n将`StudentMapper.xml`放入`ruoyi-system`模块的`resource\\mapper\\student`包内\n\n![image-20210329112404094](https://i.loli.net/2021/03/29/HJbWxASBki1whrX.png)\n\n将`api`下的包放入`ruoyi-ui`模块的`src\\api`包内\n\n![image-20210329112439948](https://i.loli.net/2021/03/29/7tG14Wj2ykrVb5i.png)\n\n将`views`下的包放入`ruoyi-ui`模块的`src\\views`包内\n\n![image-20210329112515283](https://i.loli.net/2021/03/29/bLlv8hyMGe1WmXt.png)\n\n### Biuld Project\n\n完成上面的工作之后build一下项目或者重启一下项目即可\n\n![image-20210329112645395](https://i.loli.net/2021/03/29/65n7UQYScKm2TLp.png)\n\n","tags":["若依","Vue","SpringBoot"],"categories":["记录","框架"]},{"title":"最近在学","url":"/post/7f67377d.html","content":"\n\n\n#### 链接\n\n[Hexo-stun教程](https://theme-stun.github.io/docs/zh-CN/)\n\n[微信小程序](https://developers.weixin.qq.com/miniprogram/dev/framework/)\n\n[CentOS](https://blog.csdn.net/ai_64/article/details/100557530)\n\n[若依](https://doc.ruoyi.vip/ruoyi/)\n\n","categories":["记录"]},{"title":"若依-环境部署","url":"/post/9e3bff48.html","content":"\n\n\n### 安装运行环境\n\n> 若依平台基于Vue，因此要先安装node和vue@cli脚手架\n>\n> 若依基于Maven管理项目的构建，因此需要安装好Maven\n>\n> 安装redis服务\n>\n> 克隆或下载项目源码到本地：https://gitee.com/y_project/RuoYi-Vue\n>\n> 准备好一个IDE比如IntelliJ Idea\n\n### 环境部署\n\n使用Idea导入项目，这里有几项必要的配置：\n\n`RuoYi-Vue`=>`ruoyi-admin`=>`src`=>`main`=>`resources`=>`application-druid.yml`:\n\n```yaml\n# 数据源配置\nspring:\n    datasource:\n        type: com.alibaba.druid.pool.DruidDataSource\n        driverClassName: com.mysql.cj.jdbc.Driver\n        druid:\n            # 主库数据源\n            master:\n                url: yoururl\t\t\t\t# 这里\n                username: yourusername\t\t# 这里\n                password: yourpassword\t\t# 这里\n```\n\n`RuoYi-Vue`=>`ruoyi-admin`=>`src`=>`main`=>`resources`=>`application.yml`:\n\n```yaml\n# 项目相关配置\nruoyi:\n  # 名称\n  name: RuoYi\n  # 版本\n  version: 3.3.0\n  # 版权年份\n  copyrightYear: 2021\n  # 实例演示开关\n  demoEnabled: true\n  \n  profile: yourprofile\t\t\t# 这里\n  # 获取ip地址开关\n  addressEnabled: false\n  # 验证码类型 math 数组计算 char 字符验证\n  captchaType: math\n```\n\n配置好之后，进入安装好的redis目录下，打开cmd命令行，输入`redis-server.exe redis.windows.conf`，回车，成功启动redis服务，如图：\n\n![image-20210324093536767](https://i.loli.net/2021/03/24/f1F2kIMmzbXJGTu.png)\n\n然后进入主程序启动后端服务：`RuoYi-Vue`=>`ruoyi-admin`=>`src`=>`main`=>`java`=>`com.ruoyi`=>`RuoYiApplication`，如图：\n\n![image-20210324093722063](https://i.loli.net/2021/03/24/tjeFIDQl9Yf7Ly4.png)\n\n同时，进入`ruoyi-ui`的目录下，打开cmd命令行，输入`npm run dev`，开启前端界面，如图：\n\n![image-20210324093755297](https://i.loli.net/2021/03/24/q5HtRgyzhMFPkKu.png)\n\n此时，浏览器输入`localhost:82`（也可能不用输入，会自动打开），可以成功看到启动界面：\n\n![image-20210324094031930](https://i.loli.net/2021/03/24/Ahk5WeUrTuPsq2D.png)\n\n### 问题记录\n\n#### 项目启动的时候，提示Handler dispatch failed\n\n##### 问题描述\n\n![155812_e85077f9_4777296](https://i.loli.net/2021/03/24/iGNXq2TwAL1WKZH.jpg)\n\n##### 解决办法\n\n手动加入依赖包：\n\n`RuoYi-Vue`=>`ruoyi-admin`=>`pom.xml`: \n\n```xml\n<dependency>\n\t<groupId>javax.xml.bind</groupId>\n\t<artifactId>jaxb-api</artifactId>\n\t<version>2.3.0</version>\n</dependency>\n<dependency>\n\t<groupId>com.sun.xml.bind</groupId>\n\t<artifactId>jaxb-impl</artifactId>\n\t<version>2.3.0</version>\n</dependency>\n<dependency>\n\t<groupId>com.sun.xml.bind</groupId>\n\t<artifactId>jaxb-core</artifactId>\n\t<version>2.3.0</version>\n</dependency>\n<dependency>\n\t<groupId>javax.activation</groupId>\n\t<artifactId>activation</artifactId>\n\t<version>1.1.1</version>\n</dependency>\n```\n\n#### Error creating bean with name 'sysConfigServiceImpl':\n\n##### 问题描述\n\n![112536_e5bc6191_7404679](https://i.loli.net/2021/03/24/VQD15mENIsoMgP6.png)\n\n##### 解决方案\n\n没有启动redis，启动即可\n\n#### 不再支持源选项 5。请使用 6 或更高版本。\n\n##### 解决方案\n\n`File`=>`Settings`=>`Build,Execution,Deployment`=>`Build Tools`=>`Maven`:\n\n![image-20210325140545702](https://i.loli.net/2021/03/25/LDT4sjq3CYw7zJl.png)\n\nFile=>Project Structure=>Project\n\n![image-20210325140815847](https://i.loli.net/2021/03/25/XmefLVtjqOihxNa.png)\n\nFile=>Project Structure=>Modules\n\n![image-20210325140900328](https://i.loli.net/2021/03/25/wl3QdhkGKXPWRmS.png)\n\n在`pom.xml`中添加：\n\n```xml\n<maven.compiler.encoding>UTF-8</maven.compiler.encoding>\n<java.version>8</java.version>\n<maven.compiler.source>8</maven.compiler.source>\n<maven.compiler.target>8</maven.compiler.target>\n```\n\n重新编译即可。\n\n#### 'vue-cli-service' 不是内部或外部命令，也不是可运行的程序或批处理文件\n\n##### 问题描述\n\n![image-20210329080626378](https://i.loli.net/2021/03/29/yrupOb3tQKmenBg.png)\n\n##### 解决方案\n\n进入到`ruoyi-ui`目录下，打开命令行输入`npm install`即可\n\n#### Unknown html tag\n\n##### 问题描述\n\n![image-20210407114146904](https://i.loli.net/2021/04/07/b68SIMLEmUv23TJ.png)\n\n##### 解决方案\n\n打开`package.json`，在`\"dependencies\"`添加`\"element-ui\": \"2.15.0\"`(版本号自行更改)，然后运行`npm install`即可\n\n![image-20210407114326511](https://i.loli.net/2021/04/07/M7isEBrKZOeUyFL.png)\n\n\n\n","tags":["若依","Vue","SpringBoot"],"categories":["记录","框架"]},{"title":"Vim使用指南","url":"/post/32630e53.html","content":"\n\n\n### 何为Vim\n\nVim是从 vi 发展出来的一个文本编辑器。代码补完、编译及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用。\n\n### 三种模式\n\n基本上vi/vim共分为三种模式，分别是\n\n> 命令模式（Command mode）\n>\n> 输入模式（Insert mode）\n>\n> 底线命令模式（Last line mode）\n\n#### 命令模式（Command mode）\n\n用户刚刚启动 vi/vim，便进入了命令模式。\n\n此状态下敲击键盘动作会被Vim识别为命令，而非输入字符。比如我们此时按下i，并不会输入一个字符，i被当作了一个命令。\n\n以下是常用的几个命令：\n\n```\ni 切换到输入模式，以输入字符。\nx 删除当前光标所在处的字符。\n: 切换到底线命令模式，以在最底一行输入命令。\n```\n\n若想要编辑文本：启动Vim，进入了命令模式，按下i，切换到输入模式。\n\n命令模式只有一些最基本的命令，因此仍要依靠底线命令模式输入更多命令。\n\n#### 输入模式（Insert mode）\n\n在命令模式下按下i就进入了输入模式。\n\n在输入模式中，可以使用以下按键：\n\n```\n字符按键以及Shift组合，输入字符\nENTER，回车键，换行\nBACK SPACE，退格键，删除光标前一个字符\nDEL，删除键，删除光标后一个字符\n方向键，在文本中移动光标\nHOME/END，移动光标到行首/行尾\nPage Up/Page Down，上/下翻页\nInsert，切换光标为输入/替换模式，光标将变成竖线/下划线\nESC，退出输入模式，切换到命令模式\n```\n\n#### 底线命令模式（Last line mode）\n\n在命令模式下按下:（英文冒号）就进入了底线命令模式。\n\n底线命令模式可以输入单个或多个字符的命令，可用的命令非常多。\n\n在底线命令模式中，基本的命令有（已经省略了冒号）：\n\n```\nq 退出程序\nw 保存文件\n```\n\n### 基础命令\n\n接下来简单介绍一些基础命令。\n\n#### 打开、保存、关闭文件\n\nvi命令模式下使用\n\n```\nvi filename           //打开filename文件\n:w                    //保存文件\n:w vpser.net          //保存至vpser.net文件\n:q                    //退出编辑器，如果文件已修改请使用下面的命令\n:q!                   //退出编辑器，且不保存\n:wq                   //退出编辑器，且保存文件\n```\n\n#### 插入文本或行\n\nvi命令模式下使用，执行下面命令后将进入插入模式，按`ESC`键可退出插入模式\n\n```\na       //在当前光标位置的右边添加文本\ni       //在当前光标位置的左边添加文本\nA       //在当前行的末尾位置添加文本\nI       //在当前行的开始处添加文本(非空字符的行首)\nO       //在当前行的上面新建一行\no       //在当前行的下面新建一行\nR       //替换(覆盖)当前光标位置及后面的若干文本\nJ       //合并光标所在行及下一行为一行(依然在命令模式)\n```\n\n#### 移动光标\n\nvi命令模式下使用\n\n1. 使用上下左右方向键\n2. 命令模式下：h 向左、j 向下 、k 向上、l 向右\n3. 空格键 向右、Backspace 向左、Enter 移动到下一行首、- 移动到上一行首\n\n#### 删除、恢复字符或行\n\nvi命令模式下使用\n\n```\nx         //删除当前字符\nnx        //删除从光标开始的n个字符\ndd        //删除当前行\nndd       //向下删除当前行在内的n行\nu         //撤销上一步操作\nU         //撤销对当前行的所有操作\n```\n\n#### 搜索\n\nvi命令模式下使用\n\n```\n/vpser      //向光标下搜索vpser字符串\n?vpser      //向光标上搜索vpser字符串\nn           //向下搜索前一个搜素动作\nN           //向上搜索前一个搜索动作\n```\n\n#### 跳至指定行\n\nvi命令模式下使用\n\n```\nn+          //向下跳n行\nn-          //向上跳n行\nnG          //跳到行号为n的行\nG           //跳至文件的底部\n```\n\n#### 设置行号\n\nvi命令模式下使用\n\n```\n:set  nu     //显示行号\n:set nonu    //取消显示行号\n```\n\n#### 复制、粘贴\n\nvi命令模式下使用\n\n```\nyy      //将当前行复制到缓存区，也可以用 \"ayy 复制，\"a 为缓冲区，a也可以替换为a到z的任意字母，可以完成多个复制任务。\nnyy     //将当前行向下n行复制到缓冲区，也可以用 \"anyy 复制，\"a 为缓冲区，a也可以替换为a到z的任意字母，可以完成多个复制任务。\nyw      //复制从光标开始到词尾的字符。\nnyw     //复制从光标开始的n个单词。\ny^      //复制从光标到行首的内容。  VPS侦探\ny$      //复制从光标到行尾的内容。\np       //粘贴剪切板里的内容在光标后，如果使用了前面的自定义缓冲区，建议使用\"ap 进行粘贴。\nP       //粘贴剪切板里的内容在光标前，如果使用了前面的自定义缓冲区，建议使用\"aP 进行粘贴。\n```\n\n#### 替换\n\nvi命令模式下使用\n\n```\n:s/old/new           //用new替换行中首次出现的old\n:s/old/new/g         //用new替换行中所有的old\n:n,m s/old/new/g     //用new替换从n到m行里所有的old\n:%s/old/new/g        //用new替换当前文件里所有的old\n```\n\n#### 编辑其他文件\n\n```\n:e otherfilename     //编辑文件名为otherfilename的文件。\n```\n\n#### 修改文件格式\n\n```\n:set fileformat=unix   //将文件修改为unix格式，如win下面的文本文件在linux下会出现^M。\n```","tags":["Vim"],"categories":["Vim"]},{"title":"CentOS必备配置","url":"/post/127d43b1.html","content":"\n\n\n#### 安装VMware Tools\n\n安装后可以自适应屏幕、共享剪贴板等，强烈推荐安装。\n\n启动虚拟机，然后点击菜单栏的`虚拟机`下的`安装VMware Tools`，然后，会在CentOS桌面上生成一个名字为`VMware Tools`的光驱文件。\n\n双击这个光驱文件，会看到一个后缀为`.tar.gz`的压缩文件。将压缩文件复制到home目录下，home目录即左侧的主目录文件夹。\n\n![image-20210319142527840](https://i.loli.net/2021/03/19/r49LphGIFQfnTbx.png)\n\n在这个目录下打开终端，解压缩`tar -zxvf VMwareTools-10.3.21-14772444.tar.gz`，(名字换成你自己的)，解压完后，会生成一个`vmware-tools-distrib`文件夹。\n\n进入这个文件夹，执行`cd vmware-tools-distrib`，切换成超级用户，执行`su`，输入密码，执行`sudo ./vmware-install.pl`，输入密码即可开始安装。\n\n一路回车或者输入`yes`即可。安装完成后会有下列字样：\n\n![](https://i.loli.net/2021/03/19/O9vNfhFwrcXYnim.png)\n\n\n\n#### 访问ntfs类型的U盘\n\n```shell\nsudo wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo\nsudo yum update\nsudo yum install ntfs-3g\n```\n\n\n\n#### 添加截图快捷键\n\n进入设置\n\n![image-20210319103850733](https://i.loli.net/2021/03/19/yLMDa94jxgIK8Z7.png)\n\n选择`设备->Keyboard`，拉到下面点`➕`，\n\n![image-20210319104508395](https://i.loli.net/2021/03/19/ayle6GqstjgZfmr.png)\n\n设置好之后点击`添加`即可。\n\n\n\n#### 添加中文输入法\n\n进入设置，选择`Region & Language`，点击`➕`，选择`汉语->汉语(Intelligent Pinyin)`，点击`添加`即可。\n\n![image-20210319104812953](https://i.loli.net/2021/03/19/5YfuZPEVnSBxhsg.png)\n\n\n\n#### 安装百度网盘Linux版\n\n进入[官网](http://pan.baidu.com/download)，下载`rpm格式`，下载好之后打开终端，输入`rpm -ivh`，然后将下载的包拖进来，回车即可开始下载。\n\n\n\n#### 配置Java环境\n\n进入[下载页面](https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html)，选择`linux-x64.tar.gz`后缀的文件，下载。这里需要登录Oracle账号。嫌麻烦直接百度网盘之：\n\n> 链接：https://pan.baidu.com/s/1Z4jq1OqxP_3R-Ej24hn7mw \n> 提取码：mtow \n\n创建一个Java目录\n\n```shell\nmkdir /usr/local/java\ncd /usr/local/java\n```\n\n把下载好的Java包放入此目录，解压，解压前先切换至超级用户\n\n```shell\nsu          # 回车后输入密码进入超级用户模式\ntar -zxvf jdk-8u281-linux-x64.tar.gz     # 文件名换成你自己的\n```\n\n配置环境变量\n\n```shell\nvi /etc/profile\n```\n\n添加如下内容\n\n```shell\n#set java environment\nJAVA_HOME=/usr/local/java/jdk1.8.0_281\t\t\t# 文件名换成自己的\nJRE_HOME=/usr/local/java/jdk1.8.0_281/jre\t\t# 文件名换成自己的\nCLASS_PATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib\nPATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin\nexport JAVA_HOME JRE_HOME CLASS_PATH PATH\n```\n\n**重要！！**保存成功后输入下面的命令让修改生效！\n\n```shell\nsource /etc/profile\n```\n\n输入`java -version`可以查看是否配置成功。\n\n![image-20210319132444770](https://i.loli.net/2021/03/19/9oHTBKGmunFiQl5.png)\n\n","tags":["Linux","CentOS"],"categories":["Linux"]},{"title":"Linux入门必会命令","url":"/post/6240db98.html","content":"\n\n\n### 基本命令\n\n#### 关机和重启\n\n```shell\nshutdown -h now        立刻关机\nshutdown -h 5          5分钟后关机\npoweroff               立刻关机\nshutdown -r now        立刻重启\nshutdown -r 5          5分钟后重启\nreboot                 立刻重启\n```\n\n#### 帮助命令\n\n```shell\nman命令(命令说明书)\nman shutdown\t\t   打开shutdown命令说明书，按键q退出\n```\n\n### 目录操作命令\n\n#### 目录切换 cd\n\n```shell\n命令：cd 目录\n\ncd /           切换到根目录\ncd /usr        切换到根目录下的usr目录\ncd ../         切换到上一级目录 或者  cd ..\ncd ~           切换到home目录\ncd -           切换到上次访问的目录\n```\n\n#### 目录查看 ls [al]\n\n```shell\n命令：ls [-al]\n\nls                查看当前目录下的所有目录和文件\nls -a             查看当前目录下的所有目录和文件（包括隐藏的文件）\nls -l 或 ll       列表查看当前目录下的所有目录和文件（列表查看，显示更多信息）\nls /dir           查看指定目录下的所有目录和文件   如：ls /usr\n```\n\n#### 目录操作【增、删、改、查】\n\n##### 创建目录 mkdir\n\n```shell\n命令：mkdir 目录\n\nmkdir    aaa            在当前目录下创建一个名为aaa的目录\nmkdir    /usr/aaa       在指定目录下创建一个名为aaa的目录\n```\n\n##### 删除目录或文件 rm\n\n```shell\n命令：rm [-rf] 目录\n\n删除文件：\nrm 文件         删除当前目录下的文件\nrm -f 文件      删除当前目录的的文件（不询问）\n\n删除目录：\nrm -r aaa      递归删除当前目录下的aaa目录\nrm -rf aaa     递归删除当前目录下的aaa目录（不询问）\n\n全部删除：\nrm -rf *       将当前目录下的所有目录和文件全部删除\nrm -rf /*     【自杀命令！慎用！慎用！慎用！】将根目录下的所有文件全部删除\n\n```\n\n注意：rm不仅可以删除目录，也可以删除其他文件或压缩包，为了方便大家的记忆，无论删除任何目录或文件，都直接使用 `rm -rf 目录/文件/压缩包`\n\n##### 目录修改【改】mv 和 cp\n\n1. 重命名目录\n\n   ```shell\n   命令：mv 当前目录  新目录\n   mv aaa bbb      将目录aaa改为bbb\n   ```\n\n   注意：mv的语法不仅可以对目录进行重命名而且也可以对各种文件，压缩包等进行   重命名的操作\n\n2. 剪切目录\n\n   ```shell\n   命令：mv 目录名称 目录的新位置\n   mv /usr/tmp/aaa /usr       将/usr/tmp目录下的aaa目录剪切到 /usr目录下面     \n   ```\n\n   注意：mv语法不仅可以对目录进行剪切操作，对文件和压缩包等都可执行剪切操作\n\n3. 拷贝目录\n\n   ```shell\n   命令：cp -r 目录名称 目录拷贝的目标位置   -r代表递归\n   cp /usr/tmp/aaa  /usr      将/usr/tmp目录下的aaa目录复制到 /usr目录下面\n   ```\n\n   注意：cp命令不仅可以拷贝目录还可以拷贝文件，压缩包等，拷贝文件和压缩包时不用写-r递归\n\n##### 搜索目录【查】 find\n\n```shell\n命令：find 目录 参数 文件名称\nfind /usr/tmp -name 'a*'    查找/usr/tmp目录下的所有以a开头的目录或文件\n```\n\n### 文件操作命令\n\n#### 文件操作【增、删、改、查】\n\n##### 新建文件【增】 touch\n\n```shell\n命令：touch 文件名\ntouch  aa.txt                在当前目录创建一个名为aa.txt的文件\n```\n\n##### 删除文件【删】 rm\n\n```shell\nrm -rf 文件名\n```\n\n##### 修改文件【改】 vi或vim\n\n**vi编辑器的3种模式**\n\n基本上[vi](http://www.garfielder.com/post/32630e53.html)可以分为三种状态，分别是命令模式（command mode）、插入模式（Insert mode）和底行模式（last line mode），各模式的功能区分如下：\n\n1. 命令行模式（command mode）\n\n   控制屏幕光标的移动，字符、字或行的删除，查找，移动复制某区段及进入Insert mode下，或者到 last line mode。\n\n   命令行模式下的常用命令：\n\n   * 控制光标移动：↑，↓，j\n   * 删除当前行：dd \n   * 查找：/字符\n   * 进入编辑模式：i o a\n   * 进入底行模式：:\n\n2. 编辑模式（Insert mode）\n\n   只有在Insert mode下，才可以做文字输入，按`ESC`键可回到命令行模式。\n\n   编辑模式下常用命令：\n\n   * `ESC`退出编辑模式到命令行模式；\n\n3. 底行模式（last line mode）\n\n   将文件保存或退出vi，也可以设置编辑环境，如寻找字符串、列出行号……等。\n\n   底行模式下常用命令：\n\n   * 退出编辑：  :q\n   * 强制退出：  :q!\n   * 保存并退出：  :wq\n\n**编辑文件**\n\n使用vi编辑器打开文件后点击按键：i，a或者o即可进入编辑模式。\n\ni:在光标所在字符前开始插入\na:在光标所在字符后开始插入\no:在光标所在行的下面另起一新行插入\n\n**保存或者取消编辑**\n\n保存文件：\n\n第一步：`ESC ` 进入命令行模式\n第二步：`:` 进入底行模式\n第三步：`wq`  保存并退出编辑\n\n取消编辑：\n\n第一步：`ESC` 进入命令行模式\n第二步：`:` 进入底行模式\n第三步：`q!`  撤销本次修改并退出编辑\n\n##### 文件的查看【查】\n\n文件查看命令：`cat`/`more`/`less`/`tail`\n\n**cat：看最后一屏**\n\n```shell\n示例：使用cat查看/etc/sudo.conf文件，只能显示最后一屏内容\ncat sudo.conf\n```\n\n**more：百分比显示**\n\n```shell\n示例：使用more查看/etc/sudo.conf文件，可以显示百分比，回车可以向下一行，空格可以向下一页，q可以退出查看\nmore sudo.conf\n```\n\n**less：翻页查看**\n\n```shell\n示例：使用less查看/etc/sudo.conf文件，可以使用键盘上的PgUp和PgDn向上    和向下翻页，q结束查看\nless sudo.conf\n```\n\n**tail：指定行数或动态查看**\n\n```shell\n示例：使用tail -10 查看/etc/sudo.conf文件的后10行，Ctrl+C结束  \ntail -10 sudo.conf\n```\n\n#### 权限修改\n\nrwx：r代表可读，w代表可写，x代表该文件是一个可执行文件，如果rwx任意位置变为-则代表不可读或不可写或不可执行文件。\n\n示例：给aaa.txt文件权限改为可执行文件权限，aaa.txt文件的权限是-rw-------\n\n第一位：-就代表是文件，d代表是文件夹\n第一段（3位）：代表拥有者的权限\n第二段（3位）：代表拥有者所在的组，组员的权限\n第三段（最后3位）：代表的是其他用户的权限\n\n```shell\nchmod +x aaa.txt\n或者采用8421法\nchmod 100 aaa.txt\n```\n\n### 压缩文件操作\n\n#### 打包和压缩\n\nWindows的压缩文件的扩展名  .zip/.rar\nLinux中的打包文件：aa.tar\nLinux中的压缩文件：bb.gz\nLinux中打包并压缩的文件：.tar.gz\n\nLinux中的打包文件一般是以.tar结尾的，压缩的命令一般是以.gz结尾的。\n而一般情况下打包和压缩是一起进行的，打包并压缩后的文件的后缀名一般.tar.gz。\n\n命令：tar -zcvf 打包压缩后的文件名 要打包的文件\n其中：\n\n* z：调用gzip压缩命令进行压缩\n\n* c：打包文件\n* v：显示运行过程\n* f：指定文件名\n\n```shell\n示例：打包并压缩/usr/tmp 下的所有文件 压缩后的压缩包指定名称为xxx.tar\ntar -zcvf ab.tar aa.txt bb.txt \ntar -zcvf ab.tar  *\n```\n\n#### 解压\n\n命令：tar [-zxvf] 压缩文件，其中x代表解压\n\n```shell\n示例：将/usr/tmp 下的ab.tar解压到当前目录下\ntar -zxvf ab.tar\n示例：将/usr/tmp 下的ab.tar解压到根目录/usr下\ntar -xvf ab.tar -C /usr         C代表指定解压的位置\n```\n\n### 查找命令\n\n#### grep\n\ngrep命令是一种强大的文本搜索工具\n\n使用实例：\n\n```shell\nps -ef | grep sshd  查找指定ssh服务进程 \nps -ef | grep sshd | grep -v grep 查找指定服务进程，排除gerp身 \nps -ef | grep sshd -c 查找指定进程个数 \n```\n\n#### find\n\nfind命令在目录结构中搜索文件，并对搜索结果执行指定的操作。 \n\nfind 默认搜索当前目录及其子目录，并且不过滤任何结果（也就是返回所有文件），将它们全都显示在屏幕上。 \n\n使用实例：\n\n```shell\nfind . -name \"*.log\" -ls        在当前目录查找以.log结尾的文件，并显示详细信息。 \nfind /root/ -perm 600           查找/root/目录下权限为600的文件 \nfind . -type f -name \"*.log\"    查找当目录，以.log结尾的普通文件 \nfind . -type d | sort           查找当前所有目录并排序 \nfind . -size +100M              查找当前目录大于100M的文件\n```\n\n#### locate\n\nlocate 让使用者可以很快速的搜寻某个路径。默认每天自动更新一次，所以使用locate 命令查不到最新变动过的文件。为了避免这种情况，可以在使用locate之前，先使用updatedb命令，手动更新数据库。\n\n使用实例：\n\n```shell\nupdatedb\nlocate /etc/sh         搜索etc目录下所有以sh开头的文件 \nlocate pwd             查找和pwd相关的所有文件\n```\n\n#### whereis\n\nwhereis命令是定位可执行文件、源代码文件、帮助文件在文件系统中的位置。这些文件的属性应属于原始代码，二进制文件，或是帮助文件。\n\n使用实例：\n\n```shell\nwhereis ls        将和ls文件相关的文件都查找出来\n```\n\n#### which\n\nwhich命令的作用是在PATH变量指定的路径中，搜索某个系统命令的位置，并且返回第一个搜索结果。\n\n使用实例：\n\n```shell\nwhich pwd        查找pwd命令所在路径 \nwhich java       查找path中java的路径 \n```\n\n### su、sudo\n\n#### su\n\nsu用于用户之间的切换。但是切换前的用户依然保持登录状态。如果是root 向普通或虚拟用户切换不需要密码，反之普通用户切换到其它任何用户都需要密码验证。\n\n```shell\nsu test :              切换到test用户，但是路径还是/root目录\nsu - test :            切换到test用户，路径变成了/home/test\nsu :                   切换到root用户，但是路径还是原来的路径\nsu - :                 切换到root用户，并且路径是/root\n```\n\nsu不足：如果某个用户需要使用root权限、则必须要把root密码告诉此用户。\n\n退出返回之前的用户：exit\n\n#### sudo\n\nsudo是为所有想使用root权限的普通用户设计的。可以让普通用户具有临时使用root权限的权利。只需输入自己账户的密码即可。\n\n### 系统服务\n\n```shell\nservice iptables status              查看iptables服务的状态\nservice iptables start               开启iptables服务\nservice iptables stop                停止iptables服务\nservice iptables restart             重启iptables服务\n \nchkconfig iptables off               关闭iptables服务的开机自启动\nchkconfig iptables on                开启iptables服务的开机自启动\n```\n\n### 其他命令\n\n```shell\npwd                                  查看当前目录路径\nps -ef                               查看所有正在运行的进程\nkill pid                             杀死进程(pid：进程号)\nchkconfig iptables off               关闭防火墙\n```\n\n","tags":["Linux"],"categories":["Linux"]},{"title":"CentOS在VMWare上的安装简易教程","url":"/post/833438b6.html","content":"\n\n\n让我们直接开始\n\n### CentOS镜像下载\n\n这是[下载地址](https://www.centos.org/download/)\n\n进入后有多个版本可供选择：\n\n1. DVD ISO：标准安装版，一般下载此版本即可；\n2. Everything ISO：对完整版安装盘的软件进行补充，集成所有软件；\n3. Minimal ISO：一个非常基本的CentOS 系统，只需要最少的软件包即可拥有一个功能系统；\n4. LiveGNOME ISO：GNOME桌面版；\n5. LiveKde ISO：KDE桌面版；\n6. NetInstall ISO：网络安装镜像。\n\n本教程选择的版本为：**CentOS-7-x86_64-DVD-2003.iso**\n\n### 创建虚拟机\n\n![1](https://i.loli.net/2021/03/17/prkzBywqx7cFCYa.jpg)\n\n选择自定义配置，点击下一步\n\n![2](https://i.loli.net/2021/03/17/efn3OiTVvQcqxKy.jpg)\n\n这里直接默认下一步\n\n![3](https://i.loli.net/2021/03/17/luj6b5UDMg4PpSN.jpg)\n\n选择稍后安装操作系统，点击下一步\n\n![4](https://i.loli.net/2021/03/17/IiNwjk2a5GqeCpd.jpg)\n\n客户机操作系统选择Linux，版本选择CentOS 7 64位，点击下一步\n\n![](https://i.loli.net/2021/03/17/GR3f1HkVbT8txla.jpg)\n\n虚拟机名称可以自定义，这里建议以见名知意为原则，位置尽量放在C盘外的其他盘符\n\n![6](https://i.loli.net/2021/03/17/I2MZp58T7HxbJOo.jpg)\n\n处理器数量和每个处理器的内核数可根据自己电脑配置进行选择，这里默认都选择1\n\n![7](https://i.loli.net/2021/03/17/hqfS3luXZtW69BO.jpg)\n\n同样的，虚拟机内存也依据自己电脑配置进行选择\n\n![8](https://i.loli.net/2021/03/17/XfyKGOFiuRmWUpn.jpg)\n\n网络连接选择NAT\n\n![9](https://i.loli.net/2021/03/17/untbRAsePxFOdgE.jpg)\n\n后两项默认推荐，点击下一步\n\n![10](https://i.loli.net/2021/03/17/JwoMtIy4aOjV6Fp.jpg)\n\n![11](https://i.loli.net/2021/03/17/9C4uyHGOwYDVZiA.jpg)\n\n点击创建新虚拟磁盘\n\n![12](https://i.loli.net/2021/03/17/HfVTxlOQRX7hrEL.jpg)\n\n最大磁盘大小按需分配，选择将虚拟磁盘拆分成多个文件\n\n![13](https://i.loli.net/2021/03/17/xHYAvJoaNbQtTj6.jpg)\n\n默认点击下一步\n\n![14](https://i.loli.net/2021/03/17/bvpDRd8lfoPSkyg.jpg)\n\n可以看到CentOS已经添加进去了\n\n![15](https://i.loli.net/2021/03/17/6R4rX1DK8jgsJpM.jpg)\n\n点击 CD/DVD，使用ISO映像文件，选择之前下载的文件即可\n\n![16](https://i.loli.net/2021/03/17/JpBqb4kzUVPFit7.jpg)\n\n开启虚拟机，见到如下界面，选择Install CentOS 7，直接Enter\n\n![17](https://i.loli.net/2021/03/17/SwYUIVvex18BlzN.jpg)\n\n滚动右侧滚动条选择中文->简体中文，也可以选择你喜欢的语言\n\n![18](https://i.loli.net/2021/03/17/xhu2LNaVe4BR3MS.jpg)\n\n接下来配置一些基本信息\n\n1. 点击安装源，进入之后直接选择done，警告符号随即消失\n2. 软件选择：GNOME桌面，一个友好的图形化界面\n3. 根据需要禁用Kdump\n4. 自动分区，一般划分四个分区，如图所示\n5. 点击网路和主机名，连接以太网\n6. 点击开始安装\n\n![19](https://i.loli.net/2021/03/17/5upHzYVUIROnTkK.jpg)\n\n安装过程中会弹出用户设置页面，填好并记住密码\n\n![20](https://i.loli.net/2021/03/17/DYMWvfROIG4zn6q.jpg)\n\n![21](https://i.loli.net/2021/03/17/U1NrLJH5ytjbhEs.jpg)\n\n安装完成后点击重启，看到如下界面\n\n![22](https://i.loli.net/2021/03/17/gdQiResHYrPFhJx.jpg)\n\n点击接受许可\n\n![23](https://i.loli.net/2021/03/17/zXikvJRcayd4w8N.jpg)\n\n点击完成配置，现在，可以使用之前创建的用户进行登录了\n\n![24](https://i.loli.net/2021/03/17/jgVcPL1hMFzbHxi.jpg)\n\n下图是登录成功后的图形化界面\n\n![25](https://i.loli.net/2021/03/17/GPU5CHgst3YuNVh.jpg)\n\n至此，CenoOS在VMWare上的安装教程到此结束。\n\n附：[VMware激活密钥](http://www.mlwei.com/2328.html)\n\n","tags":["Linux","CentOS","VMWare"],"categories":["Linux"]},{"title":"Linux基础知识","url":"/post/df41aea9.html","content":"\n\n\n## Linux基础教程\n\n### 一、常用命令使用\n\n#### 1.1 常用命令使用\n\n##### 1.1.1 登录和退出Linux系统\n\n**1. 启动和登陆系统**\n\n超级用户的用户名为root，密码在安装系统时已设定，系统启动成功后屏幕显示下面的提示：\n\n```shell\nlocalhost login:\n```\n\n这时输入超级用户名”root“，然后键入回车键，此时用户会在屏幕上看到输入口令的提示：\n\n```shell\nlocalhost login:root\nPassword:\n```\n\n这时需要输入口令，输入口令时，口令不会在屏幕上显示出来，如果用户输入了错误的口令，就会在屏幕上看到下列信息：\n\n```shell\nlogin incorrect.\n```\n\n这时需要重新输入，当用户正确地输入用户名和口令后，就能合法地进入系统，屏幕显示 。\n\n```shell\n[root@localhost/root] #\n```\n\n此时说明用户已经登录到系统中，可以进行操作了，这里\"#\"是超级用户的系统提示符，普通用户在建立了普通用户帐号以后就可以进行登录了 。\n\n**2. 重新启动系统**\n\n以root用户登录Linux操作系统后执行reboot命令可以重新启动linux系统。\n\n```shell\n[root@localhost/root] # reboot\n```\n\n**3. 关闭系统**\n\nshutdown 命令可以安全地关闭或重启 Linux 系统，它在系统关闭之前给系统上的所有登录用户提示一条警告信息 ，该命令还允许用户指定一个时间参数可以是一个精确的时间，也可以是从现在开始的一个时间段，精确时间的格式是 hh:mm 表示小时和分钟，时间段由 + 和分钟数表示，系统执行该命令后会自动进行数据同步的工作，该命令的一般格式 ：\n\nshutdown [选项] [时间] [警告信息]\n\n命令中各选项的含义为：\n\n-k 并不真正关机而只是发出警告信息给所有用户\n\n-r 关机后立即重新启动\n\n-h 关机后不重新启动\n\n-f 快速关机重启动时跳过 fsck\n\n-n 快速关机不经过 init 程序\n\n-c 取消一个已经运行的 shutdown \n\n例 1 ：系统在十分钟后关机并且马上重新启动。\n\n```shell\n# shutdown -r +10\n```\n\n例 2 ：系统马上关机并且不重新启动。\n\n```shell\n# shutdown -h now\n```\n\n##### 1.1.2 文件和目录操作命令\n\n**1. ls命令**\n\n这个命令就相当于 dos 下的 dir 命令一样，也是 Linux 控制台命令中最为重要几个命令之一。ls 最常用的参数有三个：-a、-l 和 –F 。\n\n```shell\nls -a\n```\n\nLinux 系统上的文件以.开头的文件被系统视为隐藏文件，仅用 ls 命令是看不到他们的，而用 ls –a 除了显示一般文件名外，连隐藏文件也会显示出来。\n\n```shell\nls -l\n```\n\n这个命令可以使用长格式显示文件内容。如果需要察看更详细的文件资料就要用到 ls -l 这个指令 。\n\n```shell\nls -F\n```\n\n在列出的文件（目录）名称后加一符号，例如可执行文件加 \"*\"，目录则加 \"/\"。\n\n**2. cd命令**\n\ncd 这个命令是用来进出目录的，它的使用方法和在 dos 下没什么两样，但和dos 不同的是 Linux 的目录对大小写是敏感的，如果大小写拼写有误，你的 cd操作是成功不了的。另外，cd 如果直接输入，cd 后面不加任何东西会回到使用者自己的 Home 目录。假设如果是 root 那就是回到/root，这个功能同 cd ~是一样的 。\n\n**3. mkdir、rmdir**\n\nmkdir命令用来建立新的目录，如输入如下命令：\n\n```shell\nmkdir work\n```\n\n将在当前目录下新建一个work目录。\n\nrmdir用来删除已建立的目录，如输入如下命令：\n\n```shell\nrmdir work\n```\n\n将删除已存在的空目录work。\n\n**4. cp**\n\ncp 这个命令相当于 dos 下面的 copy 命令，具体用法是：\n\ncp –r 源文件(source) 目的文件(target)\n\n参数 r 是指连同源文件中的子目录一同拷贝。\n\n**5. rm**\n\nrm 这个命令是用来删除文件的，rm 命令常用的参数有三个-i、-r、-f\n比如我现在要删除一个名字为 text 的一个文件，输入如下命令：\n\n```shell\nrm -i test\n```\n\n系统会询问我们是否要删除 test 文件，敲了 “y/n” 确认是否要删除 test 文件。\n\nrm – r 目录名：这个操作可以连同这个目录下面的子目录都删除，功能比上面讲到的 rmdir 更强大，不仅可能删除指定的目录，而且可以删除该目录下所有文件和子目录 。\n\nrm – f 文件名：这个操作可以不经确认强制删除文件。\n\n**6. mv**\n\nmv 这个命令的功能是移动目录或文件，引申的功能是给目录或文件重命名，比如：\n\n```shell\nmv /tmp/xxx.tar /root\n```\n\n该命令将/tmp 目录下的 xxx.tar 文件移动到/root 目录下。\n\n而：\n\n```shell\nmv aaa.tar bbb.tar\n```\n\n则是将当前目录下的文件 aaa.tar 更名为 bbb.tar 。\n\n**7. cat**\n\ncat 这个命令是 linux 中非常重要的一个命令，它的功能是显示或连结一般的ascii 文本文件。它的用法如下 ：\n\n```shell\ncat text\n```\n\n该命令显示 text 这个文件的内容 。\n\n```shell\ncat file1 file2\n```\n\n该命令依顺序显示 file1,file2 的内容 。\n\n```shell\ncat file1 file2>file3\n```\n\n该命令把 file1，file2 的内容结合起来再重定向>到 file3 文件中 。\n\n**8. more**\n\nmore 是显示一般文本文件的指令，如果一个文本文件太长了超过一个屏幕的画面，用 cat 来看实在是不理想，就可以试试 more。用法如下 ：\n\n```shell\nmore file1\n```\n\n**9. pwd**\n\npwd 这个命令的作用是显示用户当前的工作路径，直接输入 pwd 即可 。\n\n##### 1.1.3 用户及用户组管理命令\n\n**1. useradd**\n\nuseradd 命令可以创建一个新的用户帐号，其最基本用法为 ：\n\nuseradd  用户名\n\n如输入以下命令：\n\n```shell\nuseradd newuser\n```\n\n系统将创建一个新用户，newuser 该用户的 Home 目录为/home/newuser \n\nuseradd 命令的参数较多，常用的组合为 ：\n\nuseradd 用户名 -g 组名 –G 组名 -d Home 目录名 -p 密码 \n\n其中：\n\n-g 指定该用户的首要组\n\n-G 指定该用户的次要组\n\n-d 指定该用户的 Home 目录\n\n-p 指定该用户的密码 \n\n如输入以下命令：\n\n```shell\nuseradd oracle –g oinstall –G dba –d /home/oracle –p ora123\n```\n\n系统将创建一个用户 oracle，oracle 用户的首要组为 oinstall，次要组为 dba，Home 目录为/home/oracle，密码为 ora123。\n\n**2. userdel**\n\nuserdel 命令用于删除一个已存在的帐号，其用法为 ：\n\nuserdel  用户名\n\n**3. groupadd**\n\ngroupadd 命令可以创建一个新的用户组，其最基本用法为 ：\n\ngroupadd  组名\n\n如输入以下命令：\n\n```shell\ngroupadd newgroup\n```\n\n系统将创建一个新的用户组 newgroup 。\n\n**4. groupdel**\n\ngroupdel 命令用于删除一个已存在的用户组，其用法为 ：\n\ngroupdel  组名\n\n**5. passwd**\n\n出于系统安全考虑，Linux 系统中的每一个用户除了有其用户名外还有其对应的用户口令，用户可以随时用 passwd 命令改变自己的口令。该命令的一般格式为 ：\n\n```shell\npasswd\n```\n\n输入该命令后，按系统提示依次输入密码和密码确认后，即可完成用户密码的修改 。\n\n此外，超级用户还可以修改其他用户的口令，命令如下 ：\n\npasswd  用户名\n\n**6. su**\n\nsu 命令这个命令非常重要，它可以让一个普通用户拥有超级用户或其他用户的权限，也可以让超级用户以普通用户的身份做一些事情。普通用户使用这个命令时必须有超级用户或其他用户的口令。如要离开当前用户的身份，可以键入 exit 命令。su 命令的一般形式为：\n\nsu -用户名\n\n**7. chmod**\n\nchmod 命令是非常重要的，用于改变文件或目录的访问权限。该命令有两种用法：一种是包含字母和操作符表达式的文字设定法，另一种是包含数字的数字设定法 。\n\n由于数字设定法不太直观，本文不做介绍，文字设定法的用法如下 ：\n\nchmod [who] [+ | - | =] [mode] 文件名 \n\n命令中各选项的含义为 ：\n\n1. 操作对象 who 可以是下述字母中的任一个或者它们的组合 ：\n\n   u 表示用户(user) ，即文件或目录的所有者 \n\n   g 表示同组(group)用户 ，即与文件属主有相同组 ID 的所有用户 \n\n   o 表示其他(others)用户 \n\n   a 表示所有(all)用户，它是系统默认值 \n\n2. 操作符号可以是：\n\n   +添加某个权限\n\n   -取消某个权限\n\n   =赋予给定权限，并取消其他所有权限\n\n3. mode 表示权限，常用的参数有 ：\n\n   r 可读\n\n   w 可写\n\n   x 可执行\n\n举例：\n\n1. 将文件 script 的权限设为可执行。命令如下 ：\n\n   ```shell\n   chmod =rx text\n   ```\n\n   执行成功后，用 ls -l script 命令查看文件属性的结果如下 ：\n\n   -r-xr-xr-x   1  user  group  0 Feb 10 09:42 script\n\n2. 将文件 text 的权限设为：文件属主可读、可写、可执行，与文件属主同组的用户可读，其他用户不可读。命令如下 ：\n\n   ```shell\n   chmod u=rwx,g=r,o= text\n   ```\n\n   执行成功后，用 ls –l text 命令查看文件属性的结果如下 ：\n\n   -rwxr-----   1  user  group  0 Feb 10 09:42 text\n\n**8. chown**\n\nchown 用于更改某个文件或目录的属主和属组，这个命令也很常用。例如root 用户把自己的一个文件拷贝给用户 oracle，为了让用户 oracle 能够存取这个文件，root 用户应该把这个文件的属主设为 oracle，否则用户 oracle无法存取这个文件。chown 的基本用法为 ：\n\nchown [用户:组] 文件 \n\n举例：\n\n```shell\nchown oracle:dba text\n```\n\n该命令将 text 文件的属主和属组分别改为 oracle 和 dba 。\n\n##### 1.1.4 进程及任务管理命令\n\nLinux 系统上所有运行的东西都可以称之为一个进程。每个用户任务、每个系统管理守护进程都可以称之为进程。Linux 用分时管理方法使所有的任务共同分享系统资源。以下将介绍一些常用的查看和控制进程的命令。\n\n**1. ps**\n\nps 命令是最基本同时也是非常强大的进程查看命令。使用该命令可以查看有哪些进程正在运行以及运行的状态，进程是否结束，进程有没有僵死，哪些进程占用了过多的资源等等 。\n\n该命令的基本用法如下：\n\nps [选项] \n\n其中常用的选项有：\n\n-e 显示所有进程 \n\n-f 全格式 \n\n-l 长格式 \n\n**2. top**\n\ntop 命令和 ps 命令的基本作用是相同的，显示系统当前的进程和其他状况。但是 top 是一个动态显示过程，即可以通过用户按交互来不断刷新当前状态。top 的命令参数并不重要，简单的输入 top 命令即可查看系统运行状态。\n\ntop 命令执行过程中可以使用交互命令。从使用角度来看，熟练的掌握这些命令比掌握选项还重要一些。这些命令都是单字母的，常用的命令有 ：\n\n<空格> 立即刷新显示\n\nh 或者? 显示帮助画面给出一些简短的命令总结说明\n\nm 切换显示内存信息\n\nt 切换显示进程和 CPU状态信息\n\nc 切换显示命令名称和完整命令行\n\nM 根据驻留内存大小进行排序\n\nP 根据 CPU使用百分比大小进行排序\n\nq 退出 \n\n**3. kill**\n\nkill 命令可以用于终止后台进程。kill 命令是通过向进程发送指定的信号来结束进程的。kill 命令的语法格式很简单，大致有以下两种方式 ：\n\n1. kill [-s 信号] 进程号 \n\n   其中，发出的信号既可以是信号名也可以对应数字 。\n\n   如 kill -9 1234 命令，将终止 PID(进程号)为 1234 的进程 。\n\n2. kill -l \n\n   该命令显示信号列表 \n\n**4. cron**\n\ncron 命令用来实现定时任务的完成，如每日执行一次的任务（进程）。cron 命令是不应该手工启动的。一般情况下，cron 命令在系统启动时就由一个 shell 脚本自动启动。启动后，cron 命令会搜索/var/spool/cron 目录，寻找以/etc/passwd 文件中的用户名命名的 crontab 文件，被找到的这种文件将载入内存。例如一个用户名为 user 的用户它所对应的 crontab 文件就应该是/var/spool/cron/user。也就是说，以该用户命名的 crontab文件存放在/var/spool/cron 目录下面。cron 命令还将搜索/etc/crontab 文件，这个文件是用不同的格式写成的。cron 启动以后它将首先检查是否有用户设置了 crontab文件，如果没有就转入休眠状态，释放系统资源。它每分钟醒过来一次查看当前是否有需要运行的命令 。\n\n可以使用 crontab –l 命令查看目前已经存在的 cron 任务 。\n\n##### 1.1.5 磁盘及文件系统管理命令\n\n管理文件系统其实是相当复杂的工作，本文将只介绍日常维护需要的一些管理命令，主要内容有：挂装和卸载硬盘分区等 。\n\n**1. df**\n\ndf命令可以显示目前磁盘剩余的磁盘空间，常用的参数为-k，如：\n\n```shell\ndf -k\n```\n\n该语句将显示各分区的磁盘空间使用情况 。\n\n**2. mount和umount**\n\nmount 命令有很多参数，其中大多数都不会在日常工作中用到。mount 命令最常见的用法如下所示 ：\n\nmount [选项] 设备 目录 \n\n其中 最常用的选项是 ：\n\n-a 把/etc/fstab 文件中列出的文件系统都挂装上。\n\n挂装软驱和光驱的命令比较简单，直接输入以下命令即可 ：\n\n```shell\nmount /mnt/cdrom\nmount /mnt/floppy\n```\n\numount 命令用于卸载一个文件系统，命令的格式如下：\n\numount [ -f ] directory\n\n其中，directory 是准备卸载的目录名。\n\numount 命令有一个不足之处：如果文件系统正在使用中（也就是说有人在那个分区上打开了文件），就无法把这个文件系统卸载下来，这时可以使用和-f参数强制执行卸载操作，当然，这种操作可能会造成用户数据的丢失。如： \n\n```shell\numount -f /mnt/cdrom\n```\n\n该命令将强制卸载挂装在/mnt/cdrom 目录下的文件系统 。\n\n##### 1.1.6 软件安装命令\n\n**1. tar**\n\ntar 命令用于把多个文件合并于一个档案文件中，并提供分解的合并后的档案文件的功能。它独立于压缩工具，因此可以选择在合并前是否压缩。tar 命令的基本用法为 ：\n\ntar [选项] 文件名\n\n常用的选项包括：\n\n-c 创建一个新的档案文件\n\n-t 查看档案文件的内容\n\n-x 分解档案文件的内容\n\n-f 指定档案文件的名称\n\n-v 显示过程信息\n\n-z 采用压缩方式 \n\n举例：\n\n1. tar -czf oracle.tar.gz /u01/app/oracle /etc/oratab /home/oracle \n\n   该命令将/u01/app/oracle 目录下的所有文件、 /etc/oratab 文件和/home/oracle 目录下的所有文件合并到 oracle.tar 文件中，并采用压缩方式 。\n\n2. tar -tzf oracle.tar.gz \n\n   该命令列出归档文件 oracle.tar 中的所有文件列表 。\n\n3. tar –xzvf oracle.tar.gz \n\n   该命令将归档文件分解并解压缩到原有文件的路径中 。\n\n**2. rpm**\n\nrpm 命令的功能有很多，在这里我们只介绍如何利用 rpm 安装和查询已安装的软件 。\n\n1. 安装\n\n   rpm 安装软件包的基本语法如下 ：\n\n   rpm -i rpm 包名 \n\n   例如：\n\n   ```shell\n   rpm -i tomcat4.rpm\n   ```\n\n   该命令将安装 Tomcat 软件并进行相关系统配置 。\n\n2. 升级\n\n   rpm 升级软件包的基本语法如下 ：\n\n   rpm -U rpm 包名 \n\n   例如：\n\n   ```shell\n   rpm -U tomcat4.rpm\n   ```\n\n   该命令将升级 Tomcat 软件并进行相关系统配置 。\n\n3. 查看已安装的软件\n\n   有的时候，了解系统中都已经安装了哪些软件包以及它们的用途是很有用的，RPM 的查询参数就可以做到这一点 。\n\n   要想列出已经安装的全部软件包，可以通过以下命令 ：\n\n   ```shell\n   rpm -qa\n   ```\n\n   可以使用 grep 命令指定软件包的名称（或者部分名称），如下所示：\n\n   ```shell\n   rpm -qa | grep 'tomcat'\n   ```\n\n   该命令将列出包名中包含 tomcat 的软件包 。\n\n   此外：要想找出某个特定的文件到底是属于哪个软件包的，可以输入 ：\n\n   ```shell\n   rpm -qf filename\n   ```\n\n   其中 filename 是准备要查找其归属的文件名称 。\n\n   要想查出某个已经安装的软件包的功能，可以用如下命令 ：\n\n   ```shell\n   rpm -qi packagename\n   ```\n\n   其中，packagename 是要查找其用途的软件包名称 。\n\n4. 删除已安装的软件\n\n   使用 RPM 删除软件包就像安装它们一样简单。大多数情况下，用户只需要输入命令 ：\n\n   ```shell\n   rpm -e packagename\n   ```\n\n   其中，packagename是要查删除的软件包名称。\n\n### 二、文件查看/编辑方法介绍\n\n#### 2.1 cat命令介绍\n\ncat 命令的原含义为连接 （concatenate）， 用于连接多个文件内容并输出到标准输出流中（标准输出流默认为屏幕）。实际运用过程中，我们常使用它来显示文件内容。如果您熟悉 MS-DOS 下的 type 命令，相信不难掌握 cat 命令。该命令的常用示例如下 ：\n\ncat file1.txt                              显示 file1.txt 文件的内容 ；\n\ncat file1.txt file2.txt               显示 file1.txt 和 file2.txt 文件的内容 ；\n\ncat -n file1.txt                         显示 file1.txt 文件的内容 同时显示行号 ；\n\n#### 2.2 vi命令\n\nvi 是 “Visual Interface” 的简称，它在 Linux 上的地位就仿佛 Edit 程序在 DOS上一样。它可以执行输出、删除、查找、替换、块操作等众多文本操作，而且用户可以根据自己的需要对其进行定制，这是其他编辑程序所没有的。\n\nvi 不是一个排版程序，它不像 Word 或 WPS 那样可以对字体、格式、段落等其他属性进行编排，它只是一个文本编辑程序。\n\nvi 没有菜单，只有命令，且命令繁多，限于篇幅，本文只介绍常用的命令。\n\nvi 有三种基本工作模式：命令行模式，文本输入模式和末行模式 。\n\n命令行模式：\n\n任何时候 不管用户处于何种模式，只要按一下“ESC”键，即可使 vi 进入命令行模式；当在 shell 环境下输入 vi 命令启动 vi 编辑器时，也是处于该模式下 。\n\n在该模式下，用户可以输入各种合法的 vi 命令，用于管理自己的文档。此时从键盘上输入的任何字符都被当作编辑命令来解释，若输入的字符是合法的 vi 命令，则 vi 在接受用户命令之后完成相应的动作（但需注意的是，所输入的命令并不在屏幕上显示出来）。若输入的字符不是 vi 的合法命令，vi 会响铃报警 。\n\n文本输入模式：\n\n在命令模式下输入插入命令 i、附加命令 a、打开命令 o、修改命令 c、取代命令 r 或替换命令 s 都可以进入文本输入模式。在该模式下，用户输入的任何字符都被 vi 当做文件内容保存起来，并将其显示在屏幕上。在文本输入过程中，若想回到命令模式下，按“ESC”键即可。\n\n末行模式：\n\n 在命令模式下用户按 “:” 键即可进入末行模式下，此时 Vi 会在显示窗口的最后一行（通常也是屏幕的最后一行）显示一个 “:” 作为末行模式的提示符，等待用户输入命令。多数文件管理命令都是在此模式下执行的（如把编辑缓冲区的内容写到文件中等）。末行命令执行完后，vi 自动回到命令模式。\n\n若在末行模式下输入命令过程中改变了主意，可按 “ESC” 键，或用退格键将输入的命令全部删除之后，再按一下退格键，即可使 vi 回到命令模式下 。\n\n##### 2.2.1 vi的进入与退出\n\n在 shell 模式下，键入 vi 及需要编辑的文件名，即可进入 vi。例如 ：\n\n```shell\nvi example.txt\n```\n\n即可编辑 example.txt 文件。如果该文件存在，则编辑界面中会显示该文件的内容，并将光标定位在文件的第一行；如果文件不存在，则编辑界面中无任何内容。如果需要在进入 vi 编辑界面后，将光标置于文件的第 n 行，则在 vi命令后面加上 “+n” 参数即可。例如需要从 example.txt 文件的第 5 行开始显示，则使用如下命令：\n\n```shell\nvi +5 example.txt\n```\n\n退出 vi 时，需要在末行模式中输入退出命令 “q”。如果在文本输入模式下，首先按 “ESC” 键进入命令模式，然后输入 “:” 进入末行模式。在末行模式下，可使用如下退出命令：\n\n:q -- 直接退出。如果在文本输入模式下修改了文档内容，则不能退出。\n\n:wq -- 保存后退出。\n\n:x -- 同“wq”。\n\n:q! -- 不保存内容，强制退出。\n\n##### 2.2.2 vi中显示行号\n\n在末行模式下，输入如下命令：\n\n```shell\nset number\n```\n\n可使 vi 在编辑界面中显示行号。\n\n此外，在末行模式下，可使用如下 “nu” 命令（number）的简写 来显示光标所在行的行号及该行的内容 。\n\n##### 2.2.3 光标移动操作\n\n全屏幕文本编辑器中，光标的移动操作无疑是最经常使用的操作了。用户只有熟练地使用移动光标的这些命令，才能迅速准确地到达所期望的位置处进行编辑。\n\nvi 中的光标移动既可以在命令模式下，也可以在文本输入模式下，但操作的方法不尽相同。\n\n在文本输入模式下，可直接使用键盘上的四个方向键移动光标；在命令模式下，有很多移动光标的方法。不但可以使用四个方向键来移动光标，还可以用 h、j、k、l 这四个键代替四个方向键来移动光标，这样可以避免由于不同机器上的不同键盘定义所带来的矛盾，而且使用熟练后可以手不离开字母键盘位置就能完成所有操作，从而提高工作效率。\n\n以下命令均在命令行模式下完成光标移动 ：\n\nh -- 光标左移，如果在按 h 命令前输入数字 n，则光标左移 n 个字符；\n\nl -- 光标右移，如果在按 l 命令前输入数字 n，则光标右移 n 个字符；\n\nj -- 光标上移，如果在按 j 命令前输入数字 n，则光标上移 n 个字符；\n\nk -- 光标下移，如果在按 k 命令前输入数字 n，则光标 xia 移 n 个字符；\n\n0 -- 零 光标移到行首；\n\n$ -- 光标移到行尾；\n\nH -- 光标移到屏幕上显示的第一行（并不一定是文件头）；\n\nL -- 光标移到屏幕上显示的最后一行（并不一定是文件尾）；\n\nM -- 光标移到屏幕的中间一行；\n\nnG -- 光标移到第 n 行；\n\nw或 W -- 将光标右移至下一个单词的词首；\n\ne 或 E -- 如果光标起始位置处于单词内（即非单词尾处），则该命令将把光标移到本单词词尾；如果光标起始位置处于单词尾，则该命令将把光标移动到下一个单词的词尾；\n\nb 或 B -- 如果光标处于所在单词内（即非单词首）则该命令将把光标移至本单词词首；如果光标处于所在单词的词首，则该命令将把光标移到上一个单词的词首；\n\nCtrl+G -- 状态命令，显示当前编辑文档的状态。包括正在编辑的文件名、是否修改过、当前行号、文件的行数以及光标之前的行占整个文件的百分比。此外，也可以通过以下末行模式下的命令完成光标在整个文件中的移动操作；\n\n:n -- 光标移到文件的第 n 行；\n\n:$ -- 光标移到文件的最后一行； \n\n##### 2.2.4 文本插入操作\n\n在命令模式下，用户输入的任何字符都被 vi 当作命令加以解释执行，如果用户要将输入的字符当作是文本内容时，则首先应将 vi 的工作模式从命令模式切换到文本输入模式。切换的方式是使用下面的命令：\n\n**1. 插入（Insert）命令**\n\nvi提供了两个插入命令：i和I。\n\n1. i 命令 -- 插入文本从光标所在位置前开始，并且插入过程中可以使用 Backspace 键删除错误的输入。此时 vi 处于插入状态 屏幕最下行显示 “--INSERT--” （插入）字样。\n2. I 命令 -- 该命令是将光标移到当前行的行首，然后在其前插入文本。\n\n**2. 附加（append）命令**\n\nvi提供了两个附加插入命令：a和A。\n\n1. a 命令 -- 该命令用于在光标当前所在位置之后追加新文本，新输入的文本放在光标之后，在光标后的原文本将相应地向后移动，光标可在一行的任何位置 。\n2. A 命令 -- 该命令与 a 命令不同的是，A 命令将把光标挪到所在行的行尾，从那里开始插入新文本。当输入 A 命令后，光标自动移到该行的行尾。\n\na和A命令是把文本插入到行尾的唯一方法。\n\n**3. 打开（open）命令**\n\n不论是 Insert 命令也好，还是 append 命令也好，所插入的内容都是从当前行中的某个位置开始的。若我们希望在某行之前或某行之后插入一些新行，则应使用 open 命令。\n\nvi提供了两个打开命令：o和O。\n\n1. o 命令 -- 该命令将在光标所在行的下面新开一行，并将光标置于该行的行首，等待输入文本。要注意当使用 Backspace 删除字符时只能删除从插入模式开始的位置以后的字符，对于以前的字符不起作用。\n2. O 命令 和 o 命令相反，O 命令是在光标所在行的上面插入一行，并将光标置于该行的行首，等待输入文本。\n\n##### 2.2.5 文本修改操作\n\n在命令模式下可以使用 vi 提供的各种有关命令对文本进行修改，包括对文本内容的删除、复制、取代和替换等。\n\n**1. 文本删除/移动**\n\n在编辑文本时，经常需要删除一些不需要的文本，我们可以用 Backspace 键将输错或不需要的文本删除，但此时有一个限制就是当删到行头之后，再想删上面那行的内容是不可能的。\n\n在命令模式下，vi 提供了许多删除命令。这些命令大多是以 d 开头的。常用的有 ：\n\n1. 删除单个字符\n\n   x -- 删除光标处的字符。若在 x 之前加上一个数字 n，则删除从光标所在位置开始向右的 n 个字符。\n\n   X -- 删除光标前面的那个字符。若在 X之前加上一个数字 n，则删除从光标前面那个字符开始向左的 n 个字符。\n\n   显然这两个命令是删除少量字符的快捷方法。\n\n2. 删除多个字符\n\n   dd -- 删除光标所在的整行。在dd钱可加上一个数字n，表示删除当前行及其后n-1行的内容。\n\n   D或d$ -- 两命令功能一样，都是删除从光标所在处开始到行尾的内容 。\n\n   d0 -- 删除从光标前一个字符开始到行首的内容 。\n\n   dw -- 删除一个单词。若光标处在某个词的中间，则从光标所在位置开始删至词尾。同 dd 命令一样，可在 dw 之前加一个数字 n。表示删除 n 个指定的单词。\n\n   如果用户不小心进行了误删除操作，也不要紧，vi 提供了恢复误操作的命令，并且可以将恢复的内容移动，放在文本的任何地方。恢复命令用 “np\"， 其中 n 为需要恢复的次数。例如使用 dd 命令删除了一行内容，然后使用 ”2p“命令，则被删除的内容会被重新插入两遍。\n\n   通过 dd 命令及 p 命令的结合使用，可以很方便的实现文本行的移动操作 。\n\n**2. 文本复制命令**\n\nyy -- 复制光标所在的整行。在yy前可加上一个数字n，表示复制当前行及其后n-1行的内容。\n\n文本行复制后，通过使用上面介绍的”p“命令，可以将文本行粘贴到任何地方。\n\ndd、yy及p命令在vi中的作用，类似于Windows中图形编辑程序的”剪切“、”复制“及”粘贴“命令。\n\n**3. 取消上一命令**\n\n取消上一命令（Undo），也称复原命令，是非常有用的命令，它可以取消前一次的误操作或不合适的操作对文件造成的影响，使之回复到这种误操作或不合适操作被执行之前的状态。\n\n 取消上一命令有两种形式，在命令模式下键入字符 u 和 U。它们的功能都是取消刚才输入的命令，恢复到原来的情况。小写 u 和大写 U 在具体细节上有所不同，二者的区别在于，大写 U命令的功能是恢复到误操作命令前的情况，即如果插入命令后使用 U 命令，就删除刚刚插入的内容；如果删除命令后使用 U 命令，就相当于在光标处又插入刚刚删除的内容。这里把所有修改文本的命令都视为插入命令。也就是说，U 命令只能取消前一步操作，如果用 U命令撤消了前一步操作，当再按 U 键时，并不是撤消再前一步的操作，而是撤消了刚才 U命令执行的操作，也就是又恢复到第一次使用 U 命令之前的状态，结果是什么都没做。而小写 u 命令的功能是把当前行恢复成被编辑前的状态，而不管此行被编辑了多少次。\n\n**4. 重复命令**\n\n 重复命令也是一个非常常用的命令。在文本编辑中经常会碰到需要机械地重复一些操作，这时就需要用到重复命令。它可以让用户方便地再执行一次前面刚完成的某个复杂的命令。\n\n重复命令只能在命令模式下工作，在该模式下按 ”.“  键既可。执行一个重复命令时，其结果是依赖于光标当前位置的。\n\n##### 2.2.6 文本搜索与替换操作\n\n在进行文本编辑的时候，您可以需要搜索或定位特定的单词或单词的一部分。vi 编辑器有向前或向后搜索指定模式的功能。\n\n”/“ 是 vi 编辑器的模式搜索命令。键入 ”/“ 后，屏幕的底部会出现一行，同时一个斜扛会出现在底行的行首上，且光标被放置在斜扛之后。此时，您可以在光标位置键入你需要搜索的模式。输入完成并按下 ENTER 键后，编辑器将开始从光标所在的位置起向文件尾部搜索你键入的模式。如果输入的模式被找到，光标将停留在找到的模式上。在找到一个匹配的模式后，如果您还需要搜索下一个匹配的模式。使用命令 “n” 即可；如果需要找到上一个匹配的模式，则使用 “N” 命令即可。\n\n此外，“?”  命令也是模式搜索命令。与 “/” 的区别在于： “/” 是从光标当前所在位置向文件尾部搜索，而 “?” 命令则是由光标当前所在位置向文件头部搜索。\n\n文本替换操作需要使用末行模式进行操作，即所有文本替换操作命令均以“：”开头。\n\n文本替换命令的格式为：\n\n:s/text1/text2 -- 用于将光标所在段落搜索到的第一个 “text1” 替换为 “text2”；\n\n:s/text1/text2/g -- 用于将光标所在段落的所有 “text1” 替换为 “text2”；\n\n:m,ns/text1/text2/g -- 用于将从 m 行开始至 n 行结束的所有搜索到的 “text1”替换为 “text2”。 其中可以使用$表示末行，即 “1,$” 表示替换文档中的所有符合条件的字符。\n\n#### 2.3 head及tail命令介绍\n\n当需要查看一个文本文件的头部或尾部时，head 命令及 tail 命令可以非常方便的完成该操作。head 命令用于查看一个文本文件的开头部分；而 tail 命令则用于显示文本文件的末尾几行。这两个命令举例如下：\n\nhead example.txt  显示文件 example.txt 的前十行内容 ；\n\nhead -n 20 example.txt  显示文件 example.txt 的前二十行内容 ；\n\ntail example.txt  显示文件 example.txt 的后十行内容 ；\n\ntail -n 20 example.txt  显示文件 example.txt 的后二十行内容 ；\n\ntail -f example.txt  显示文件 example.txt 的后十行内容，并在文件内容增加后，自动显示新增的文件内容。\n\n### 三、网络配置及操作\n\n#### 3.1 网络配置命令\n\nLinux 系统中最常用的网络配置命令包括 ifconfig、route，其中 ifconfig 用来查看和配置网络接口（通常是网卡）信息，包括网络接口设备的 IP 地址、掩码等；route 用来管理 Linux 系统内核中的路由表 它最大的用途就是用来设定静态的路由表项，通常是在系统用 ifconfig 配置网络接口后，用它来设定主机或者一网段的 IP 地址应该通过什么接口发送等。\n\n##### 3.1.1 ifconfig\n\nifconfig的语法为：\n\nifconfig [-a] [-V] [-s] interface [[AF] address] \n\n[[-]broadcast [address]] \n\n[netmask address] \n\n[up|down]\n\n其中 interface 为网卡名，address 为 IP 地址，broadcast 表示设置广播地址，其后的 address 为广播地址的 IP，netmask 表示设置子网掩码，其后的 address 为子网掩码的 IP。up、down 设置当前网卡的状态，up表示启用当前网卡 down 表示关闭当前网卡。\n\nifconfig的常用参数说明如下：\n\n-a 查看所有网卡状态\n\n-V 查看ifconfig命令的版本信息\n\n-s 查看统计信息\n\n示例：\n\n1. 将第一块网卡的IP设置为192.168.0.1；\n\n   ```shell\n   ifconfig eth0 192.168.0.1\n   ```\n\n2. 暂时关闭或启用网卡：\n\n   ```shell\n   关闭第一块网卡：ifconfig eht0 down\n   启用第一块网卡：ifconfig eth0 up\n   ```\n\n3. 将第一块网卡的子网掩码设置为255.255.255.0；\n\n   ```shell\n   ifconfig eth0 netmask 255.255.255.0\n   ```\n\n   我们也可以同时设置IP地址和子网掩码：\n\n   ```shell\n   ifconfig eth0 192.168.0.1 netmask 255.255.255.0\n   ```\n\n4. 查看第一块网卡的状态：\n\n   ```shell\n   ifconfig eth0\n   ```\n\n如果要查看所有的网卡状态，则直接使用不带参数的 ifconfig 命令即可。\n\nifconfig 输出的状态信息是十分有用的，下面我们就简单说明一下：\n\n有几个状态比较重要：\n\nUP/DOWN：网卡是否启动了，如果是 DOWN的话，那肯定无法用的；\n\nRX packets 中的 errors 包的数量如果过大说明网卡在接收时有问题；\n\nTX packets 中的 errors 包的数量如果过大说明网卡在发送时有问题；\n\n##### 3.1.2 route\n\nroute命令的语法为：\nroute [-CFvnee] \n\nroute [-v] [-A family] add [-net|-host] target [netmask Nm] [gw Gw] [metric N] [mod] [reinstate] [[dev] If]\n\nroute [-v] [-A family] del [-net|-host] target [gw Gw] [netmask Nm] [metricN] [[dev] If] \n\nroute [-V] [--version] [-h] [--help] \n\nroute的常用参数说明如下：\n\n-v                                使用冗余输出模式。\n\n-A family                   指定特定的地址族（例如\"inet\"、\"inet6“）\n\n-n                               使用数字显示的地址（例如 202.38.75.75）而不是去解释域名。\n\n-e                               使用与 netstat 相同的输出格式。\n\n-ee                             参数会产生很长的输出，包括内核路由表的几乎所有信息。\n\n-net                           目标（target）是一个网段。\n\n-host                         目标（target）是一个单独的主机。\n\n-F                               显示内核 FIB 路由表。结果可能被-e 和-ee 参数改变。\n\n-C                              显示内核中路由缓存信息。\n\ndel                             删除一个路由表项。\n\nadd                           增加一个路由表项。\n\nTarget                       配置的目的网段或者主机。可以是 IP，或者是网络或主机名。\n\nnetmask Nm           用来指明要添加的路由表项的网络掩码。\n\ngw Gw                      任何通往目的（target）的 IP 分组都要通过这个网关。\n\nmetric M                  设置路由表中该项的尺度域（metric field）为M。\n\n示例：\n\n1. 添加一条路由表项，网段192.168.0.x 应该从接口”eth0“走\n\n   ```shell\n   route add -net 192.168.0.0 netmask 255.255.255.0 dev eth0\n   ```\n\n2. 添加一条缺省路由\n\n   ```shell\n   route add 0.0.0.0 gw 网关地址\n   ```\n\n3. 删除缺省路由\n\n   ```shell\n   route del 0.0.0.0 gw 网关地址\n   ```\n\n4. route命令的输出结果示例说明\n\n   输出的格式有以下几栏：\n\n   Destination                  目标网段或主机\n\n   Gateway                       网关地址，如果没有设置，则是”*“表示\n\n   Genmask                      网络掩码\n\n   Flags 一些可能的标记如下：\n\n   U（路由是活动的）\n\n   H（目标是一个主机）\n\n   G（使用网关 gateway）\n\n   R（reinstate route 动态路由产生的表象）\n\n   D（dynamically installed by daemon or redirect）\n\n   M（modified from routing daemon or redirect）\n\n   ！（reject route）\n\n   Metric                             路由距离。\n\n   Ref                                  路由项引用次数。（Linux内核中没有使用）\n\n   Use                                 查找路由项的次数。\n\n   Iface                               该路由表项对应的输出接口。\n\n#### 3.2 网络操作命令\n\nLinux 系统常用的网络操作命令包括 netstat、nslookup、host、finger 和 ping。netstat 命令的功能是显示网络连接、路由表和网络接口信息，可以让用户得知目前都有哪些网络连接正在运作。nslookup 命令的功能是查询一台机器的 IP地址和其对应的域名。它通常需要一台域名服务器来提供域名服务。如果用户已经设置好域名服务器，就可以用这个命令查看不同主机的 IP 地址对应的域名。host 命令可根据主机名查询主机的 IP 地址或根据主机 IP 地址查询主机名；finger 命令的功能是查询用户的信息，通常会显示系统中某个用户的用户名、主目录、停滞时间、登录时间、登录 shell 等信息。ping 命令用于查看网络上的主机是否在工作。\n\n##### 3.2.1 netstat\n\nnetstat命令的语法为：\n\nnetstat [选项]\n\nnetstat的常用参数说明如下：\n\n-a   显示所有 socket 包括正在监听的 \n\n-c   每隔 1 秒就重新显示一遍直到用户中断它 \n\n-i    显示所有网络接口的信息格式同”ifconfig –e”\n\n-n   以网络 IP 地址代替名称显示出网络连接情形 \n\n-r    显示核心路由表格式同 “route –e”\n\n-t    显示 TCP 协议的连接情况 \n\n-u   显示 UDP 协议的连接情况 \n\n-v   显示正在进行的工作 \n\n##### 3.2.2 nslookup\n\nnslookup 命令的功能是查询一台机器的 IP 地址和其对应的域名。它通常需要一台域名服务器来提供域名服务。如果用户已经设置好域名服务器，就可以用这个命令查看不同主机的 IP 地址对应的域名。命令的语法为：\n\nnslookup [IP地址/域名]\n\n示例：\n\n在本机致性nslookup命令\n\n```shell\nDefault Server: name.tlc.com.cn\nAddress: 192.168.1.99\n>\n```\n\n在符号 “>” 后面输入要查询的IP地址或域名并回车即可。如果要退出该命令，输入exit并回车即可。\n\n##### 3.2.3 host\n\nhost命令的功能基本与nslookup相同。命令的语法为：\n\nhost [选项] [IP地址/域名/主机名]\n\nhost的常用参数如下：\n\n-a   显示所查域名或IP地址、域名或主机名的相关信息。\n\n##### 3.2.4 finger\n\nfinger 命令的功能是查询用户的信息，通常会显示系统中某个用户的用户名、主目录、停滞时间、登录时间、登录 shell 等信息。如果要查询远程机上的用户信息。需要在用户名后面接 “@主机名” 。采用[用户名@主机名]的格式，不过要查询的网络主机需要运行 finger 守护进程。该命令的一般格式为：\n\nfinger [选项] [使用者] [用户@主机]\n\nfinger的常用参数如下：\n\n-s   显示用户的注册名、实际姓名、终端名称、写状态、停滞时间、登录时间等信息。\n\n-l    除了用-s 选项显示的信息外，还显示用户主目录、登录 shel、邮件状态等信息，以及用户主目录下的.plan、.project 和.forward 文件的内容 \n\n-p   除了不显示.plan文件和.project文件以外与-l选项相同\n\n##### 3.2.5 Ping命令\n\nping 命令用于查看网络上的主机是否在工作，它向该主机发送 ICMP ECHO_REQUEST 包。有时我们想从网络上的某台主机上下载文件，可是又不知道那台主机是否开着，就需要使用 ping 命令查看。该命令的一般格式为：\n\nping [选项] [主机名/IP地址]\n\nping的常用参数如下：\n\n-c    数目 在发送指定数目的包后停止 \n\n-d   设定 SO_DEBUG 的选项 \n\n-f    大量且快速地送网络封包给一台机器看它的回应 \n\n-I    秒数 设定间隔几秒送一个网络封包给一台机器预设值是一秒送一次 \n\n-l    次数 在指定次数内以最快的方式送封包数据到指定机器 （只有超级用户可以使用此选项）\n\n-q   不显示任何传送封包的信息只显示最后的结果 \n\n-r   不经由网关而直接送封包到一台机器，通常是查看本机的网络接口是否有问题\n\n-s   字节数 指定发送的数据字节数，预设值是 56，加上 8 字节的 ICMP头，一共是 64ICMP 数据字节\n\n#### 3.3 常用网络配置文件介绍\n\n在 Linux 系统中，TCP/IP 网络是通过若干个文本文件进行配置的，需要编辑这些文件来完成联网工作。系统中重要的有关网络配置文件为：\n\n/etc/sysconfig/network\n\n/etc/hosts\n\n/etc/services\n\n/etc/host.conf\n\n/etc/nsswitch.conf\n\n/etc/resolv.conf \n\n/etc/xinetd.conf\n\n/etc/modules.conf\n\n/etc/sysconfig/network-scripts/ifcfg-ethN \n\n接下来我们将对这些文件逐一讲述，这些文件都可以在系统运行时进行修改，不用启动或者停止任何守护程序，更改会立刻生效（除了/etc/sysconfig/network）。 另外，这些文件都支持由\"#\"开头的注释，每一个文件都有在 UNIX手册页中的第 5 部分中有一项，可以用 man 命令来获取它们。\n\n##### 3.3.1 /etc/sysconfig/network 网络设置 \n\n该文件用来指定服务器上的网络配置信息，包含了控制和网络有关的文件和守护程序的行为的参数。下面是一个例子文件：\n\n```shell\nNETWORKING=yes\nHOSTNAME=machinel\nGATEWAY=210.34.6.2\nFORWARD_IPV4=yes\nGATEWAYDEV=\n```\n\n其中，NETWORK=yes/no 表示网络是否被配置 ；\n\nHOSTNAME=hostname hostname 表示服务器的主机名；\n\nGATEWAY=gw-ip gw-ip 表示网络网关的 IP 地址；\n\nFORWARD_IPV4=yes/no 是否开启 IP 转发功能；\n\nGAREWAYDEV=gw-dev gw-dw 表示网关的设备名 如 eth0 等；\n\n##### 3.2.2 /etc/hosts IP 地址和主机名的映射 \n\n/etc/hosts 中包含了 IP 地址和主机名之间的映射，还包括主机名的别名，IP地址的设计使计算机容易识别，但对于人却很难记住它们，为了解决这个问题，创建了/etc/hosts 这个文件。下面是一个例子文件：\n\n```shell\n127.0.0.1 machinel localhost.localdomain localhost\n192.168.1.100 machine7\n192.168.1.101 otherpc otheralias\n```\n\n在这个例子中，本机名是 machine1，otherpc 还有别名 otheralias，它可以指向 otheralias。一旦配置完机器的网络配置文件，应该重新启动网络以使修改生效，使用下面的命令来重新启动网络：\n\n```shell\nservice network restart\n```\n\n/etc/hosts 文件通常含有主机名、localhost 和系统管理员经常使用的系统别名，有时候 telnet 到 Linux 机器要等待很长时间，可以通过在\"/etc/hosts\"加入客户的机器的 IP 地址和主机名的匹配项，就可以减少登录等待时间。在没有域名服务器情况下，系统上的所有网络程序都通过查询该文件来解析对应于某个主机名的 IP 地址，否则，其他的主机名通常使用 DNS 来解决，DNS 客户部分的配置在文件/etc/resolv.conf 中。\n\n##### 3.3.3 /etc/services\n\n/etc/services 中包含了服务名和端口号之间的映射，不少的系统程序要使用这个文件。\n\n##### 3.3.4 /etc/host.conf 配置名字解析器 \n\n有两个文件声明系统到哪里寻找名字信息来配置 UNIX名字解析器的库。文件/etc/host.conf 由版本 5 的 libc 库所使用，而/etc/nsswitch.conf 由版本 6 使用(glibc )。问题在于一些程序使用其中一个，而一些使用另一个，所以将两个文件都配置正确是必要的。\n\n/etc/host.conf 文件指定如何解析主机名，Linux 通过解析器库来获得主机名对应的 IP 地址 。\n\n\"order \" 指定主机名查询顺序，其参数为用逗号隔开的查找方法，支持的查找方法为 bind、hosts、和 nis，分别代表 DNS、/etc/hosts 和 NIS，这里规定先查询\"/etc/hosts\"文件然后再使用 DNS 来解析域名。\n\n\"trim\" 表明当通过 DNS 进行地址到主机名的转换时，域名将从主机名中被裁剪掉，trim 可以被多个域包含多次，对/etc/hosts 和 NIS 查询方法不起作用，注意在/etc/hosts 和 NIS 表中主机名是被适当地（有或没有全域名）列出的。\n\n\"multi\" 指定是否\"/etc/hosts\"文件中指定的主机可以有多个地址，值为 on 表示允许，拥有多个 IP 地址的主机一般称为具有多个网络界面。\n\n\"nospoof \" 指是否允许对该服务器进行 IP 地址欺骗，值为 on 表示不允许，IP欺骗是一种攻击系统安全的手段，通过把 IP 地址伪装成别的计算机，来取得其它计算机的信任。\n\n\"alert\" 当 nospoof 指令为 on 时，alert 控制欺骗的企图是否用 syslog 工具进行记录，值为 on 表示使用，缺省值为 off。\n\n“rccorder\" 如果被设置为 on，所有的查询将被重新排序，所以在同一子网中的主机将首选被返回。缺省值为 off。\n\n##### 3.3.5 /etc/nsswitch.conf 配置名字解析器 \n\n/etc/nsswitch.conf 文件是由 Sun 公司开发并用于管理系统中多个配置文件查找的顺序，它比/etc/host.conf 文件提供了更多的功能。/etc/nsswitch.conf 中的每一行或者是注释(以#号开头)或者是一个关键字后跟冒号和一系列要试用的有顺序的方法。每一个关键字是在/etc/目录可以被/etc/nsswitch.conf 控制的/etc 文件的名字。下面是可以被包含的关键字：\n\naliases           邮件别名\n\npasswd         系统用户\n\ngroup            用户组\n\nshadow         隐蔽口令\n\nhosts             主机名和 I P 地址\n\nnetworks      网络名和号\n\nprotocols      网络协议\n\nservices        端口号和服务名称\n\nethers           以太网号\n\nrpc                 远程进程调用的名称和号\n\nnetgroup      网内组\n\n##### 3.3.6 /etc/resolv.conf 配置 DNS 客户 \n\n文件/etc/resolv.conf 配置 DNS 客户，它包含了主机的域名搜索顺序和 DNS服务器的地址，每一行应包含一个关键字和一个或多个的由空格隔开的参数。下面是一个例子文件：\n\n```shell\nnameserver 192.168.0.36\nnameserver 192.168.0.37\n```\n\n合法的参数及其意义如下：\n\nnameserver 表明 DNS 服务器的 IP 地址。可以有很多行的 nameserver，每一个带一个 IP 地址。在查询时就按 nameserver 在本文件中的顺序进行，且只有当第一个 nameserver 没有反应时才查询下面的 nameserver。\n\ndomain 声明主机的域名。很多程序用到它，如邮件系统；当为没有域名的主机进行 DNS 查询时，也要用到。如果没有域名，主机名将被使用，删除所有在第一个点( . )前面的内容。\n\nsearch 它的多个参数指明域名查询顺序。当要查询没有域名的主机，主机将在由 search 声明的域中分别查找。domain 和 search 不能共存；如果同时存在 后面出现的将会被使用。\n\nsortlist 允许将得到域名结果进行特定的排序。它的参数为网络/掩码对，允许任意的排列顺序。Red Hat 中没有提供缺省的/etc/resolv.conf文件，它的内容是根据在安装时给出的选项动态创建的。\n\n##### 3.3.7 /etc/xinetd.conf\n\nredhat 7.1 及以后版本计和以往的版本有一个明显的区别，就是用 xinetd.conf代替原来的 inetd.conf，并且直接使用了 firewall 服务。 xinetd(eXtendedInterNET services daemon)对 inetd 功能进行了扩展，xinetd 的默认配置文件是/etc/xinetd.conf，它看起来尽管和老版本的/etc/inetd.conf 完全不同，其实只是以一个脚本的形式将 inetd 中每一行指定的服务扩展为一个/etc/xinetd.d/下的配置文件。其格式为：\n\n```shell\nservice service-name\n{\n    disabled = yes/no; //是否禁用\n    socket_type = xxx; //TCP/IP socket type, such as stream, dgram, raw,...\n    protocol = xxx; //服务使用的协议\n    server = xxx; //服务daemon的完整路径\n    server_args = xxx; //服务的参数\n    port = xxx; //指定服务的端口号\n    wait = xxx; //是否阻塞服务，即单线程或多线程\n    user = xxx; //服务进程的uid\n    group = xxx; //gid\n    REUSE = xxx; //可重用标值\n    ... ...\n}\n```\n\n##### 3.3.8 /etc/modules.conf 文件 \n\n该配置文件定义了各种需要在启动时加载的模块的参数信息，文件格式如下：\n\n```shell\nalias eth0 tg3\nalias eth1 3c905\n```\n\n##### 3.3.9 /etc/sysconfig/network-scripts/ifcfg-ethN 文件 \n\n系统网络设备的配置文件保存在 “/etc/sysconfig/network-scripts” 目录下，ifcfg-eth0 包含第一块网卡的配置信息，ifcfg-eth1包含第二块网卡的配置信息。\n\n下面是“/etc/sysconfig/network-scripts/ifcfg-eth0”文件的示例：\n\n```shell\nDEVICE=eth0\nONBOOT=yes\nBOOTPROTO=static\nIPADDR=192.168.0.66\nNETMASK=255.255.255.0\nGATEWAY=192.168.0.65\n```\n\n若希望手工修改网络地址或在新的接口上增加新的网络界面，可以通过修改对应的文件（ifcfg-ethN）或创建新的文件来实现。\n\n#### 3.4常用网络操作方法\n\nLinux提供了一组强有力的网络命令来为用户服务，这些工具能够帮助用户登录到远程计算机上、传输文件和执行远程命令等。本节介绍下列几个常用的有关网络操作的命令：\n\nftp            传输文件\n\ntelnet       登录到远程计算机上\n\nr-              使用各种远程命令\n\n##### 3.4.1 ftp远程文件传输\n\nftp 命令是标准的文件传输协议的用户接口。ftp 是在 TCP/IP 网络上的计算机之间传输文件的简单有效的方法。它允许用户传输 ASCII 文件和二进制文件。在 ftp 会话过程中，用户可以通过使用 ftp 客户程序连接到另一台计算机上。从此，用户可以在目录中上下移动、列出目录内容、把文件从远程机拷贝到本地机上、把文件从本地机传输到远程系统中。需要注意的是，如果用户没有那个文件的存取权限，就不能从远程系统中获得文件或向远程系统传输文件。为了使用 ftp 来传输文件，用户必须知道远程计算机上的合法用户名和口令。这个用户名/口令的组合用来确认 ftp 会话，并用来确定用户对要传输的文件可以进行什么样的访问。\n\nftp命令的一般格式如下：\n\n$ ftp 主机名/IP\n\n如果没有指定主机名，ftp将给出提示符，等待用户输入命令：\n\n```shell\n$ ftp\nftp > \n```\n\n此时在 ftp>提示符后面输入 open 命令加主机名或 IP 地址，将试图连接指定的主机。不管使用哪一种方法，如果连接成功，需要在远程机上登录。用户如果在远程机上有帐号，就可以通过 ftp 使用这一帐号并需要提供口令。在远程机上的用户帐号的读写权限决定该用户在远程机上能下载什么文件和将上载文件放到哪个目录中。\n\n一旦用户使用 ftp 在远程站点上登录成功，将得到 “ftp>” 提示符，现在可以自由使用 ftp 提供的命令，可以用 help 命令取得可供使用的命令清单，也可以在 help 命令后面指定具体的命令名称，获得这条命令的说明。\n\n最常用的命令有：\n\nls   列出远程机的当前目录 \n\ncd   在远程机上改变工作目录 \n\nlcd   在本地机上改变工作目录 \n\nascii   设置文件传输方式为 ASCII模式，默认情况下，ftp 按 ASCII模式传输文件，用户也可以指定    其他模式。ascii 和 brinary 命令的功能是设置传输的模式。用 ASCII 模式传输文件对纯文本是非常好的，但为避免对二进制文件的破坏，用户可以以二进制模式传输文件 。\n\nbinary   设置文件传输方式为二进制模式 \n\nclose   终止当前的 ftp 会话 \n\nhash   每次传输完数据缓冲区中的数据后就显示一个#号 \n\nget（mget）从远程机传送指定文件到本地机 \n\nput（mput） 从本地机传送指定文件到远程机  \n\nopen   连接远程 ftp 站点 \n\nquit   断开与远程机的连接并退出 ftp \n\n?   显示本地帮助信息 \n\n!    转到 Shell 中 \n\n使用ftp传输文件过程如下：\n\n```shell\n[root@localhost root]# ftp 192.168.1.66\nConnected to 192.168.1.66 (192.168.1.66).\n220 localhost.localdomain FTP server (Version wu-2.6.2-5) ready.\nName (192.168.1.66:root): test\n331 Password required for test.\nPassword:\n230 User oracle logged in. Access restrictions apply.\nRemote system type is UNIX.\nUsing binary mode to transfer files.\nftp> ls\n227 Entering Passive Mode (192.168.1.66,228,168)\n150 Opening ASCII mode data connection for directory listing.\ntotal 312\n-rw-r--r-- 1 root root 1215 Feb 4 13:49 button1.jpg\n-rw-r--r-- 1 root root 1133 Feb 4 13:49 button2.jpg\n-rw-r--r-- 1 root root 1435 Feb 4 13:46 index.html\n226 Transfer complete.\nftp> lcd\nLocal directory now /root\nftp> lcd tmp\nLocal directory now /root/tmp\nftp> bin\n200 Type set to I.\nftp> mget *.jpg\nmget button1.jpg? y\n227 Entering Passive Mode (10,153,89,66,187,198)\n150 Opening BINARY mode data connection for button1.jpg (1215 bytes).\n226 Transfer complete.\n1215 bytes received in 0.0119 secs (1e+02 Kbytes/sec)\nmget button2.jpg? y\n227 Entering Passive Mode (10,153,89,66,243,218)\n150 Opening BINARY mode data connection for button2.jpg (1133 bytes).\n226 Transfer complete.\n1133 bytes received in 0.00223 secs (5e+02 Kbytes/sec)\nftp> quit\n221-You have transferred 2348 bytes in 2 files.\n221-Total traffic for this session was 3315 bytes in 3 transfers.\n221-Thank you for using the FTP service on localhost.localdomain.\n221 Goodbye.\n```\n\n##### 3.4.2 telnet\n\n用户使用 telnet 命令进行远程登录。该命令允许用户使用 telnet 协议在远程计算机之间进行通信，用户可以通过网络在远程计算机上登录，就像登录到本地机上执行命令一样。为了通过 telnet 登录到远程计算机上，必须知道远程机上的合法用户名和口令。虽然有些系统确实为远程用户提供登录功能，但出于对安全的考虑，要限制来宾的操作权限，因此，这种情况下能使用的功能是很少的。当允许远程用户登录时，系统通常把这些用户放在一个受限制的shell 中，以防系统被怀有恶意的或不小心的用户破坏。用户还可以使用 telnet从远程站点登录到自己的计算机上，检查电子邮件、编辑文件和运行程序，就像在本地登录一样。但是，用户只能使用基于终端的环境而不是 X Wndows环境，telnet 只为普通终端提供终端仿真，而不支持 X Wndow等图形环境。\n\ntelnet命令的一般形式为：\n\ntelnet 主机名/IP\n\n其中 “主机名/IP” 是要连接的远程机的主机名或 IP 地址。如果这一命令执行成功，将从远程机上得到 login：提示符。\n\n使用telnet命令登录的过程如下：\n\n$ telnet 主机名/IP\n\n一旦telnet成功地连接到远程系统上，就显示登录信息并提示用户输入人用户名和口令。如果用户名和口令输入正确，就能成功登录并在远程系统上工作。\n\n在telnet提示符后面可以输入很多命令，用来控制telnet会话过程，在telnet联机帮助手册中对这些命令有详细的说明。\n\n##### 3.4.3 r- 系列命令\n\n除 ftp 和 telnet 以外，还可以使用 r-系列命令访问远程计算机和在网络上交换文件。使用 r-系列命令需要特别注意，因为如果用户不小心，就会造成严重的安全漏洞。用户发出一个 r-系列命令后，远程系统检查名为/etc/hosts.equiv的文件，以查看用户的主机是否列在这个文件中。如果它没有找到用户的主机，就检查远程机上同名用户的主目录中名为.rhosts 的文件，看是否包括该用户的主机。如果该用户的主机包括在这两个文件中的任何一个之中，该用户执行 r-系列命令就不用提供口令。\n\nrlogin命令\n\nrlogin是 “remote login” （远程登录） 的缩写。该命令与 telnet 命令很相似，允许用户启动远程系统上的交互命令会话。rlogin 的一般格式是：\n\nrlogin [ -8EKLdx ] [ -e char ] [-k realm ] [ - l username ] host \n\n一般最常用的格式是：\n\nrlogin host\n\nrsh 命令\n\nrsh 是“ remote shell” （远程 shell）的缩写。该命令在指定的远程主机上启动一个 shell 并执行用户在 rsh 命令行中指定的命令。如果用户没有给出要执行的命令，rsh 就用 rlogin 命令使用户登录到远程机上。rsh 命令的一般格式是：\n\nrsh [-Kdnx] [-k realm] [-l username] host [command] \n\n一般常用的格式是：\n\nrsh host [command]\n\ncommand 可以是从 shell 提示符下键人的任何 Linux 命令 。\n\n### 四、常用使用技巧\n\n#### 4.1 Linux下软件包的安装及卸载\n\n在 Linux 操作系统下，几乎所有的软件均通过 RPM 进行安装、卸载及管理等操作。RPM 的全称为 Redhat Package Manager，是由 Redhat 公司提出的，用于管理 Linux 下软件包的软件。Linux 安装时，除了几个核心模块以外，其余几乎所有的模块均通过 RPM 完成安装。RPM 有五种操作模式，分别为：安装、卸载、升级、查询和验证。\n\n##### 4.1.1 RPM安装操作\n\n命令：\n\nrpm -i 需要安装的包文件名\n\n举例如下：\n\nrpm -i example.rpm  安装example.rpm 包；\n\nrpm -iv example.rpm 安装example.rpm包，并在安装过程中显示正在安装的文件信息；\n\nrpm -ivh example.rpm 安装 example.rpm 包，并在安装过程中显示正在安装的文件信息及安装进度；\n\n##### 4.1.2 RPM查询操作\n\n命令：\n\nrpm -q ... \n\n附加查询命令：\n\na   查询所有已经安装的包\n\n以下两个附加命令用于查询安装包的信息；\n\ni    显示安装包的信息；\n\nl    显示安装包中的所有文件被安装到哪些目录下；\n\ns   显示安装版中的所欲文件状态及被安装到哪些目录下；\n\n以下两个附加命令用于指定需要查询的是安装包还是已安装后的文件；\n\np   查询的是安装包的信息；\n\nf    查询的是已安装的某文件信息；\n\n举例如下：\n\n```shell\nrpm -qa | grep tomcat4 //查看 tomcat4 是否被安装；\nrpm -qip example.rpm //查看 example.rpm 安装包的信息；\nrpm -qif /bin/df //查看/bin/df 文件所在安装包的信息；\nrpm -qlf /bin/df //查看/bin/df 文件所在安装包中的各个文件分别被安装到哪个目录下；\n```\n\n##### 4.1.3 RPM卸载操作\n\n命令：\n\nrpm -e 需要卸载的安装包\n\n在卸载之前，通常需要使用 rpm -q ... 命令查出需要卸载的安装包名称。\n\n举例如下：\n\n```shell\nrpm -e tomcat4  //卸载tomcat4软件包\n```\n\n##### 4.1.4 RPM升级操作\n\n命令：\nrpm -U 需要升级的包\n\n举例如下：\n\n```shell\nrpm -Uvh example.rpm  //升级example.rpm软件包\n```\n\n##### 4.1.5 RPM验证操作\n\n命令：\n\nrpm -V 需要验证的包\n\n举例如下：\n\n```shell\nrpm -Vf /etc/tomcat4/tomcat4.conf\n```\n\n输出信息类似如下：\n\n```shell\nS.5....T c /etc/tomcat4/tomcat4.conf\n```\n\n其中，S 表示文件大小修改过，T 表示文件日期修改过。限于篇幅，更多的验证信息请您参考 rpm 帮助文件：man rpm。\n\n##### 4.1.6 RPM的其他附加命令\n\n--force    强制操作（如强制安装、删除等）；\n\n--requires    显示该包的依赖关系；\n\n--nodeps     忽略依赖关系并继续操作；\n\n#### 4.2 Linux操作系统的时钟教程\n\n##### 4.2.1 时钟系统介绍\n\n对于 Linux 操作系统，主要有两种时钟系统：\n\n1. 硬件时钟系统：该时钟系统的运行独立于任何系统控制程序，在 CPU 内部运行，既使系统断电，该时钟系统仍然保持运行。此时钟系统常常被称为实时时钟系统（RTC）、BIOS 时钟系统或 CMOS 时钟系统。\n2. 系统时间：该时间为 Linux 内核的时钟系统所维护，并且被定时中断程序所驱动。该时间仅当 Linux 系统运行过程中有意义。该系统时间表示为以 UTC通用协调时间（Universal Time Coordinated）计算，自1970年1月1日0时0分0秒起至当前时刻所经过的秒数（该数字不是整数 以小数方式表示精度）。\n\n在 Linux 系统中，真正起作用的是系统时间。硬件时钟系统的唯一作用是在Linux 系统没有运行时，保持时间的运行。当 Linux 操作系统启动时，系统会自动将硬件时钟系统的时间同步到 Linux 系统时间，并且在之后的整个 Linux运行过程中，不再使用该硬件时钟系统（这与 DOS 的实现方式完全不同，在DOS 中，只有硬件时间系统的概念）。而在 Linux 操作系统关闭时，系统会自动将当前的 Linux 系统时间同步到硬件时钟系统所维护的时间。\n\n##### 4.2.2 硬件时钟系统与系统时间的同步\n\n/sbin/hwclock 用于同步硬件时钟系统的时间与 Linux 操作系统时间。\n\n查看当前硬件时钟系统时间的命令为：\n\n```shell\n/sbin/hwclock --show\n```\n\n将硬件时钟系统时间同步到Linux操作系统时间的命令为：\n\n```shell\n/sbin/hwclock --hctosys\n```\n\n将 Linux 操作系统时间同步到硬件时钟系统时间的命令为 ：\n\n```shell\n/sbin/hwclock --systohc\n```\n\n如果观察系统启动/关闭时执行的初始化脚本”/etc/rc.d/rc.sysinit”，我们不难发现：系统启动过程中，自动调用 ”/sbin/hwclock --hctosys“ 将硬件时钟系统时间同步到操作系统时间；而在系统关闭过程中，自动调用 ”/sbin/hwclock--systohc“ 将操作系统时间同步到硬件时钟系统时间。\n\n#### 4.3 系统信息及运行状态监控\n\nLinux的文件系统中，有一个特殊目录”/proc“，该目录下列出的文件并非保存在磁盘上，而是内存中的一个映像。在该目录下可以找到许多有意思的东西，例如：\n\n/proc/cpuinfo     本机CPU的相关信息；\n\n/proc/meminfo     本机内存及交换分区的使用信息；\n\n/proc/modules     本机已安装的硬件模块信息；\n\n/proc/mounts     本机已挂载（mount）上的设备信息；\n\n此外，该目录下有一些以数字为名称 的子目录，每个子目录用于维护一个正在运行的进程，而目录即为相应的进程ID。例如，进入名称为”1“的子目录：\n\n```shell\ncd /proc/1\n```\n\n该目录下 文件 ”cmdline“ 中的内容为该进程运行时执行的命令行；”environ“文件中的内容为该进程运行时的环境变量信息；”stat“ 文件中存放的时该进程运行的状态信息等。\n\n通过查看 ”/proc“ 目录下的文件，可以获取几乎所有的系统信息及系统的运行状态信息。事实上，Linux 下的诸多查询系统状态信息的命令，也是通过读取该目录下的文件而获取的。\n\n以下是一些用于查看系统状态信息的命令：\n\n##### 4.3.1 df命令\n\n用于查看 Linux 文件系统的状态信息，显示各个分区的容量、已使用量、未使用量及挂载点等信息。如：\n\ndf -k    以千字节（KB）为单位显示各分区的信息;\n\ndf -a    显示所有分区，包括大小为 0 的分区；\n\ndf -T     显示分区类型（EXT2 或 EXT3等）。\n\n##### 4.3.2 du命令\n\n用于查看文件或文件夹的大小。如：\n\ndu -b /home    以字节为单位显示 “/home” 文件夹下各个子文件夹的大小；\n\ndu -ks home    以千字节（KB）为单位显示 ”/home“ 文件夹的总大小；\n\n##### 4.3.3 top命令\n\n用于实时查看系统状态信息。运行该命令后，屏幕上会显示如下信息：\n\nCPU状态（CPU states）：包括用户进程占用比率、系统进程占用比率、用户的 nice 优先级进程占用比率及空闲 CPU资源比率等；\n\n内存状态（Mem）：包括内存总量、使用量、空闲量等；\n\n交换分区状态（Swap）：包括交换分区总量、使用量、空闲量等；\n\n每个进程的状态：包括进程ID、用户名、优先级、CPU和内存使用量，以及运行该进程时执行的命令行；\n\n执行 top 命令后，每隔 5 秒，系统会自动刷新一次状态信息。如果要指定刷新间隔，在启动时加入 ”-d“ 参数即可。例如：\n\ntop -d 1     启动top，并且每隔1秒刷新一次。\n\n进入top后，按下如下按钮会有相应功能：\n\n【空格】立即刷新显示信息；\n\n【M】按内存使用量排序；\n\n【N】按进程ID排序；\n\n【P】按CPU使用量排序；\n\n【c】扩展命令行信息，显示完整的命令行；\n\n【?】显示帮助信息；\n\n【q】退出top程序。\n\n##### 4.3.4 iostat命令\n\n统计并输出 CPU使用信息及特定设备或分区的 IO 信息。\n\niostat -c    仅显示CPU使用情况统计信息；\n\niostat -d    仅显示设备/分区使用情况统计信息；\n\niostat -d 2    统计设备/分区使用情况，并每隔2秒刷新一次。\n\n显示的IO统计信息中，各部分说明如下：\n\ntps    设备每秒收到的IO传送请求数；\n\nBlk_read/s    设备每秒读入的块数量；\n\nBlk_wrtn/s    设备每秒写入的块数量；\n\nBlk_read    设备读入的总块数量；\n\nBlk_wrtn    设备写入的总块数量；\n\n显示CPU统计信息，各部分的含义同top。\n\n#### 4.4 打包/压缩工具tar\n\ntar 是 Linux下最常用的打包、压缩工具，它在 Linux 中扮演类似于 WinZip 或WinRAR 在 Windows 下的角色。下面是该工具的常用命令参数及运用举例：\n\n主要命令：\n\n-c    创建包\n\n-x    解包\n\n-t    列出包中的所有内容\n\n-r    增加文件到指定包中\n\n-u    更新包中的文件\n\n可选命令：\n-j     创建或解开包时，使用 bzip2 进行压缩或解压；\n\n-z    创建或解开包时，使用 gzip 进行压缩或解压；\n\n-Z    创建或解开包时，使用 compress 进行压缩或解压；\n\n-f     后面跟指定的包文件名；\n\n-v    显示打包/解包过程；\n\n-C    指定解包后的路径；\n\n例如：\n\ntar -czf tmp.tar.gz /tmp      将 ”/tmp“ 目录压缩打包，存放为 tmp.tar.gz；\n\ntar -xzf tmp.tar.gz -C /home       将 tmp.tar.gz 包解到 ”/home“ 目录下；\n\ntar -t tmp.tar.gz      查看 tmp.tar.gz 包中的文件信息；\n\n#### 4.5 文件及文件内容的查找\n\nLinux下提供完善的文件及文件内容查找命令，分别介绍如下：\n\n##### 4.5.1 文件查找命令find\n\nfind用于查找文件系统中的指定文件，其命令格式为：\n\nfind 要查找的路径 表达式 \n\n例如：\n\nfind . -name 1.txt      在当前目录及其子目录下查找文件 ”1.txt“；\n\nfind /tmp -name 1.txt      在 ”/tmp“ 目录及其子目录下查找文件 ”1.txt“。\n\n##### 4.5.2 文件内容查找命令grep\n\ngrep命令用于查找指定的模式匹配，格式为：\n\ngrep [命令选项] 要查找的匹配模式 [要查找的文件]\n\n例如：\ngrep cams test.txt      在 ”test.txt“ 文件中查找 cams 字符串；\n\ngrep -r cams /root/cams      在 ”/root/cams“ 目录及其子目录下的所有文件中查找 cams 字符串；\n\ngrep 命令除了能够查找文件外，还能够将任意输出流重定向到 grep 进行查找：\n\nps -ef | grep ora      查找进程名中包含 ”ora“ 的所有进程信息。\n\n#### 4.6 Linux的系统服务及其配置\n\n##### 4.6.1 服务介绍\n\nLinux 系统服务是在 Linux启动时自动加载，并在 Linux退出时自动停止的系统任务。在 Linux 启动过程中，我们可以看得很多 ”starting …“ 提示信息，该信息表示正在启动系统服务；而在 Linux 退出时，我们也能够看到相应的”Stopping …“ 信息，表示系统服务正在停止。Linux自身有许多系统任务，如 ”network“ 服务用于支持网络连接等。CAMS 在安装过程中，会自动加入三个系统任务，以保证在 Linux 启动时，CAMS 服务自动启动；而在 Linux 关闭时， CAMS 服务也自动停止。这三个服务分别是：\n\noracled      Oracle数据库服务\n\ncamsd        CAMS协议处理模块服务\n\ntomcat4     Tomcat Web Server服务，用于支持CAMS配置管理台、自助服务平台、Portal服务平台及内容计费认证平台等；\n\nLinux 系统的所有服务程序脚本均可以在 ”/etc/rc.d/init.d“ 文件夹中找到，每一项服务对应一个脚本文件。如果 CAMS 已经安装，我们可以在该文件夹下找到 ”oracled“、”camsd“  和 ”tomcat4“ 这三个文件。\n\n##### 4.6.2 启动和停止服务\n\nservice命令用于启动及停止某个服务，例如：\n\nservice camsd stop     停止camsd服务\n\nservice oracled start      启动oracled服务\n\nservice tomcat4 start      启动tomcat4服务\n\nCAMS 引入的三个服务间有依赖关系，即 camsd 服务和 tomcat4 服务依赖与oracled 服务，在 oracled 服务启动前不能启动 camsd 服务和 tomcat4 服务；而在 oracled 服务停止前必须先停止 camsd 服务和 tomcat4 服务。\n\n##### 4.6.3 服务的添加、删除、自动运行及状态\n\nCAMS在安装过程中会自动添加相关的服务，在安装的最后过程中，会提示用户是否启动服务（使服务生效）。需要注意的是：一个服务被添加后，并不表示该服务在系统启动过程中会自动运行，仅表示可以使用service命令来启动、停止服务。\n\n1. **添加服务**\n\n   添加服务的步骤为：\n\n   1. 将该服务的脚本文件拷入”/etc/rc.d/init.d“ 文件夹下，保证其状态为”可执行“；\n\n   2. 使用chkconfig命令将服务添加到服务列表中：\n\n      ```shell\n      chkconfig --add camsd\n      ```\n\n      将服务添加以后，该服务即可以使用service来启动/停止了。\n\n2. **删除服务**\n\n   如果要删除服务，将上述命令的”add“改为”del“即可：\n\n   ```shell\n   chkconfig --del camsd\n   ```\n\n3. **设置服务自动运行**\n\n   Linux运行有7种运行级别，分别使用0-6来表示，控制台界面运行级别为3，图形界面运行级别为5。要使某服务在系统启动时自动运行，使用chkconfig将该服务添加到相应级别的自启动服务列表中即可：\n\n   ```shell\n   chkconfig --level 35 camsd on\n   ```\n\n   上面的命令将camsd服务添加到级别为3、5的自启动服务列表中；而下面的命令则将服务camsd从级别为3、5的自启动服务列表中删除：\n\n   ```shell\n   chkconfig --level 35 camsd off\n   ```\n\n   如果需要查看某项服务的自启动状态信息，使用如下命令即可：\n\n   ```shell\n   chkconfig --list camsd\n   ```\n\n   ","tags":["Linux"],"categories":["Linux"]},{"title":"MQTT的发布和订阅","url":"/post/3af7fcdd.html","content":"\n\n\n\n\n### 准备工作\n\n本文测试MQTT的发布/订阅，分为客户端版和python版。\n\n首先我们需要一个MQTT服务器，这里推荐使用[EMQ](https://www.emqx.cn/downloads#broker)，一步搭建，省去了很多部署的麻烦。\n\n选择Windows版本下载，自己选择目录解压后，进入`bin`目录打开cmd，运行`emqx start`命令开启服务即可。此时在浏览器地址栏输入: `localhost:18083`，输入用户名：`admin`，密码：`public`进入，可以看到主界面。\n\n![image-20210316142312122](https://i.loli.net/2021/03/16/RnXQu4xr3cp2eZs.png)\n\n### Python版本\n\n#### 下载库\n\n`cmd`下执行这个命令\n\n```shell\npip install paho-mqtt\n```\n\n#### 编写订阅端\n\n新建一个`mqtt_sub.py`文件，编写代码如下：\n\n```python\nimport paho.mqtt.client as mqtt\n\nHOST = \"127.0.0.1\"\nPORT = 1883\n\n\ndef on_connect(client, userdata, flags, rc):\n    print(\"Connected with result code \" + str(rc))\n    client.subscribe(\"chat\")\n\n\ndef on_message(client, userdata, msg):\n    print(msg.topic + \" \" + \":\" + str(msg.payload))\n\n\nclient = mqtt.Client()\nclient.on_connect = on_connect\nclient.on_message = on_message\nclient.connect(host=HOST, port=PORT, keepalive=600)\nclient.loop_forever()\n\n```\n\n#### 编写发布端\n\n新建一个`mqtt_pub.py`文件，编写代码如下：\n\n```python\nimport paho.mqtt.client as mqtt\n\nHOST = \"127.0.0.1\"\nPORT = 1883\nmqttClient = mqtt.Client()\n\n\n# 连接MQTT服务器\ndef on_mqtt_connect():\n    mqttClient.connect(host=HOST, port=PORT, keepalive=600)\n    mqttClient.loop_start()\n\n\n# publish 消息\ndef on_publish(topic, payload, qos):\n    mqttClient.publish(topic, payload, qos)\n\n\n# 消息处理函数\ndef on_message_come(client, userdata, msg):\n    print(msg.topic + \" \" + \":\" + str(msg.payload))\n\n\n# subscribe 消息\ndef on_subscribe():\n    mqttClient.subscribe(topic=\"chat\", qos=2)\n    mqttClient.on_message = on_message_come  # 消息到来处理函数\n\n\ndef main():\n    on_mqtt_connect()\n    on_publish(topic=\"chat\", payload=\"Hello Python!\", qos=2)\n    on_subscribe()\n    while True:\n        pass\n\n\nif __name__ == '__main__':\n    main()\n\n```\n\n#### 执行文件\n\n首先运行`mqtt_sub.py`，接着，同时运行`mqtt_pub.py`，这时候就可以收到自己订阅的消息\n\n![image-20210316140937642](https://i.loli.net/2021/03/16/jiwxE4GR6Vv5zkf.png)\n\n至此，Python版本测试成功。[完整代码](https://github.com/GarfieldCCC/MQTT-Test)\n\n\n\n### 客户端版本\n\n#### 下载客户端工具\n\n这里推荐[MQTT.fx](http://mqttfx.jensd.de/index.php/download)\n\n下载完毕安装后打开界面如下：\n\n![image-20210316142535670](https://i.loli.net/2021/03/16/YIzjhMyoc4mG7ug.png)\n\n#### 配置连接\n\nExtras->Edit Connection Profiles，然后按照下图配置\n\n![image-20210316142900875](https://i.loli.net/2021/03/16/GsIfWxOoFy9q2Q3.png)\n\n配置完毕后点击`Connect`\n\n![image-20210316143015378](https://i.loli.net/2021/03/16/D5y8qxPRMEHp36u.png)\n\n创建自己的订阅\n\n![image-20210316143134253](https://i.loli.net/2021/03/16/Q98FhA7IVZy56nW.png)\n\n这边配置完毕，接下来进入刚刚的Dashboard，选择`Websocket`\n\n![image-20210316143302417](https://i.loli.net/2021/03/16/UWPzEy3DbfLVaCT.png)\n\n先连接\n\n![image-20210316143335024](https://i.loli.net/2021/03/16/9WAfHbLw3pXTMJd.png)\n\n然后发布一个主题为goods的信息\n\n![image-20210316143424889](https://i.loli.net/2021/03/16/dF83UqCiQAzflag.png)\n\n发送后MQTT.fx客户端便会接收到发送的信息\n\n![image-20210316143448684](https://i.loli.net/2021/03/16/7duHlLGY3btSVMq.png)\n\n至此，客户端版本测试完毕","tags":["MQTT","Python"],"categories":["网络","记录"]},{"title":"MQTT简单介绍","url":"/post/9f1ab931.html","content":"\n\n\n### 简述\n\nMQTT（Message Queuing Telemetry Transport，消息队列遥测传输协议），是一种基于发布/订阅模式的\"轻量级\"通讯协议，该协议构建于TCP/IP协议上。好比你给好友发送一封电子邮件，发送完成后你可以去做别的事情，收件人也不必立刻响应，可以在自己有空的时候查看邮件，是一个典型的异步发布/订阅场景。而另一种典型的同步请求/回答场景，可以用接打电话的场景来类比。\n\nMQTT的设计遵循以下的原则：\n\n1. 精简，不添加可有可无的功能。\n2. 发布/订阅（Pub/Sub）模式，方便消息在传感器之间传递。\n3. 允许用户动态创建主题，零运维成本。\n4. 把传输量降到最低以提高传输效率。\n5. 把低带宽、高延迟、不稳定的网络等因素考虑在内。\n6. 支持连续的会话控制。\n7. 理解客户端计算能力可能很低。\n8. 提供服务质量管理。\n9. 假设数据不可知，不强求传输数据的类型与格式，保持灵活性。\n\n#### 服务质量\n\n为了满足不同的场景，MQTT支持三种不同级别的服务质量（Quality of Service，QoS）为不同场景提供消息可靠性：\n\n1. 级别0：尽力而为。消息发送者会想尽办法发送消息，但是遇到意外并不会重试。\n2. 级别1：至少一次。消息接收者如果没有知会或者知会本身丢失，消息发送者会再次发送以保证消息接收者至少会收到一次，当然可能造成重复消息。\n3. 级别2：恰好一次。保证这种语义肯待会减少并发或者增加延时，不过丢失或者重复消息是不可接受的时候，级别2是最合适的。\n\n#### 消息类型\n\nMQTT拥有14种不同的消息类型：\n\n1. CONNECT：客户端连接到MQTT代理\n2. CONNACK：连接确认\n3. PUBLISH：新发布消息\n4. PUBACK：新发布消息确认，是QoS 1给PUBLISH消息的回复\n5. PUBREC：QoS 2消息流的第一部分，表示消息发布已记录\n6. PUBREL：QoS 2消息流的第二部分，表示消息发布已释放\n7. PUBCOMP：QoS 2消息流的第三部分，表示消息发布完成\n8. SUBSCRIBE：客户端订阅某个主题\n9. SUBACK：对于SUBSCRIBE消息的确认\n10. UNSUBSCRIBE：客户端终止订阅的消息\n11. UNSUBACK：对于UNSUBSCRIBE消息的确认\n12. PINGREQ：心跳\n13. PINGRESP：确认心跳\n14. DISCONNECT：客户端终止连接前优雅地通知MQTT代理\n\n### MQTT协议原理\n\n![1](https://i.loli.net/2021/03/16/Fr3jR7aoeyY6JIP.png)\n\n#### MQTT协议实现方式\n\n实现MQTT协议需要客户端和服务器端通讯完成，在通讯过程中，MQTT协议中有三种身份：发布者（Publish）、代理（Broker）（服务器）、订阅者（Subscribe）。其中，消息的发布者和订阅者都是客户端，消息代理是服务器，消息发布者可以同时是订阅者。\n\nMQTT传输的消息分为：主题（Topic）和负载（payload）两部分：\n\n1. Topic，可以理解为消息的类型，订阅者订阅（Subscribe）后，就会收到该主题的消息内容（payload）；\n2. payload，可以理解为消息的内容，是指订阅者具体要使用的内容。\n\n#### 网络传输与应用消息\n\nMQTT会构建底层网络传输：它将建立客户端到服务器的连接，提供两者之间的一个有序的、无损的、基于字节流的双向传输。\n\n当应用数据通过MQTT网络发送时，MQTT会把与之相关的服务质量（QoS）和主题名（Topic）相关连。\n\n#### MQTT客户端\n\n一个使用MQTT协议的应用程序或者设备，它总是建立到服务器的网络连接。客户端可以：\n\n1. 发布其他客户端可能会订阅的信息；\n2. 订阅其它客户端发布的消息；\n3. 退订或删除应用程序的消息；\n4. 断开与服务器连接。\n\n#### MQTT服务器\n\nMQTT服务器以称为\"消息代理\"（Broker），可以是一个应用程序或一台设备。它是位于消息发布者和订阅者之间，它可以：\n\n1. 接受来自客户的网络连接；\n2. 接受客户发布的应用信息；\n3. 处理来自客户端的订阅和退订请求；\n4. 向订阅的客户转发应用程序消息。\n\n#### MQTT协议中的订阅、主题、会话\n\n##### 订阅（Subscription）\n\n订阅包含主题筛选器（Topic Filter）和最大服务质量（QoS）。订阅会与一个会话（Session）关联。一个会话可以包含多个订阅。每一个会话中的每个订阅都有一个不同的主题筛选器。\n\n##### 会话（Session）\n\n每个客户端与服务器建立连接后就是一个会话，客户端和服务器之间有状态交互。会话存在于一个网络之间，也可能在客户端和服务器之间跨越多个连续的网络连接。\n\n##### 主题（Topic Name）\n\n连接到一个应用程序消息的标签，该标签与服务器的订阅相匹配。服务器会将消息发送给订阅所匹配标签的每个客户端。\n\n##### 主题筛选器（Topic Filter）\n\n一个对主题名通配符筛选器，在订阅表达式中使用，表示订阅所匹配到的多个主题。\n\n##### 负载（Payload）\n\n消息订阅者所具体接收的内容。\n\n#### MQTT协议中的方法\n\nMQTT协议中定义了一些方法（也被称为动作），来于表示对确定资源所进行操作。这个资源可以代表预先存在的数据或动态生成数据，这取决于服务器的实现。通常来说，资源指服务器上的文件或输出。主要方法有：\n\n1. Connect：等待与服务器建立连接。\n2. Disconnect：等待MQTT客户端完成所做的工作，并与服务器断开TCP/IP会话。\n3. Subscribe：等待完成订阅。\n4. UnSubscribe：等待服务器取消客户端的一个或多个topics订阅。\n5. Publish：MQTT客户端发送消息请求，发送完成后返回应用程序线程。","tags":["MQTT"],"categories":["网络","记录"]},{"title":"Hexo解决难看的中文URL编码","url":"/post/9d25bc33.html","content":"\n\n\n### 为什么写这篇文章\n\n你的基于Hexo搭建起来的博客，如果你的文章标题含有中文，那么你会看到你的URL被解析成了非常难看的样子。为了看起来更加简洁，使用这款[Hexo-addrlink](https://github.com/Rozbo/hexo-abbrlink)插件就可以解决\n\n![110872814-7d992700-830b-11eb-84a3-85d8a3525680](https://i.loli.net/2021/03/12/GbQmP7uqlX6iBaz.png)\n\n### 使用\n\n#### 安装插件\n\n```shell\nnpm install hexo-abbrlink --save\n```\n\n### 配置\n\n修改根目录站点配置文件`_config.yml`，改为：\n\n```yaml\npermalink: posts/:abbrlink.html\nabbrlink:\n    alg: crc32\n    rep: hex\n```\n\n然后hexo三连后 便会自动在原来的.`md`文件中生成`abbrlink`字段\n\n成果如下：\n\n![image-20210312163322788](https://i.loli.net/2021/03/12/EubR4JOnoG3dLM7.png)\n\n","tags":["编码","Hexo"],"categories":["记录"]},{"title":"导出iOS设备的微信数据到电脑","url":"/post/1f905c2f.html","content":"\n\n\n### 准备工作\n\n[iTunes](https://www.apple.com.cn/itunes/)\n\n[iPhone Backup Extractor](https://www.iphonebackupextractor.com/zh/free-download/)\n\n数据库工具（本文以[DB Browser for SQLite](http://www.sqlitebrowser.org/dl/)为例）\n\n### 下载上述的三个工具\n\n#### iTunes\n\n进入官网，拉到下面，点击`Windows`，进入后下载。如果没有反应，需要打开为新标签\n\n![image-20210311164947421](https://i.loli.net/2021/03/11/hcpi6Rj7LHDVQyS.png)\n\n![image-20210311165034692](https://i.loli.net/2021/03/11/J9FeTBDSq5ApUHN.png)\n\n#### iPhone Backup Extractor\n\n软件界面如下\n\n![image-20210311165146409](https://i.loli.net/2021/03/11/9GsCmSa8zNTQXUe.png)\n\n#### DB Browser for SQLite\n\n软件界面如下\n\n![image-20210311165311030](https://i.loli.net/2021/03/11/juOrDycqNXJ6FT9.png)\n\n### 使用iTunes备份数据\n\n打开iTunes，并使用数据线将你的苹果手机连接至电脑，点击左上角的手机图标，在备份这一栏选择备份到电脑->立即备份（不要加密）\n\n![image-20210311165625743](https://i.loli.net/2021/03/11/Ezd1woTSiOQnUly.png)\n\n时间可能会比较久，耐心等待即可\n\n### 使用iPhone Backup Extractor提取数据\n\n打开iPhone Backup Extractor，如果上一步没有问题，会在左边显示你刚刚备份好的文件\n\n![image-20210311165905509](https://i.loli.net/2021/03/11/ZxPlbRMNiWptDda.png)\n\n选择Expert mode->Applications->com.tencent.xin->Documents->自己的加密过的某一个用户->DB，在这个DB目录下面就是微信的聊天数据（message_1.sqlite一直到message_4.sqlite）和用户数据（WCDB_Contact.sqlite）。选中，然后点击`Extract selected`，免费版会等待10s，并且一次最多导出4个文件，如果你觉得免费版不够用，可以订阅，一年200多\n\n![image-20210312080438929](https://i.loli.net/2021/03/12/9IshDygu5ZRnvl8.png)\n\n导出至任何位置都可以\n\n### 使用DB Browser for SQLite打开数据库\n\n![image-20210312080615541](https://i.loli.net/2021/03/12/ALkwFXBem8dCDsH.png)\n\n先选择打开数据库，再选择浏览数据，即可成功访问数据库的数据","tags":["iOS","微信"],"categories":["记录","iOS"]},{"title":"GitHub搭建博客自定义域名","url":"/post/76507812.html","content":"\n\n\n### 为什么写这篇文章\n\n虽然已经有了自己的个人站点，但是为了让自己的文章更好地被搜索引擎抓取，需要让各类搜索引擎收录自己的站点，但是当我想让百度站长收录时，总是失败。后来上网查询发现GitHub禁止了百度爬虫，即github.io的站点无法被百度收录。因此，使用个性域名现在成为必须做的一件事。\n\n### 准备工作\n\n搭建好的GitHub博客、一个阿里云的域名（是不是阿里云都无所谓）。\n\n### 阿里云域名注册\n\n进入[阿里云](https://www.aliyun.com/)，登录后右上角点击搜索：域名，然后点击域名注册，输入自己想要的域名，根据财力选择适合自己的后缀，加入清单，右边点击`立即结算`，即可。\n\n![image-20210311161010629](https://i.loli.net/2021/03/11/jxgO4KMY5ARqVnr.png)\n\n![image-20210311161031111](https://i.loli.net/2021/03/11/smghdHGpPZ8tlvX.png)\n\n购买后，可以进入控制台查看自己的域名。以我为例：\n\n![image-20210311161215507](https://i.loli.net/2021/03/11/EFKHfWtNDxi2Qu3.png)\n\n这里首先要进行实名认证，需要你填写一个模板，很简单，我已经做好了实名认证。\n\n若你也做好了实名认证，点击右边的`解析`后，点击`添加记录`。\n\n![image-20210311161435086](https://i.loli.net/2021/03/11/Wn4gA9z6m5DdR27.png)\n\n这里需要我们填写一些信息，具体填写内容如下：\n\n![image-20210311161701239](https://i.loli.net/2021/03/11/JDSzYrOuEvP8ox2.png)\n\n记录类型：默认选择A\n\n主机记录：主机记录需要添加两个，分两次添加解析，分别为www和@，不分先后\n\n解析线路：选择默认\n\nTTL值：选择默认 10分钟\n\n记录值：打开电脑终端或命令行，输入命令：\n\n```shell\nping [个人站点原域名]\n例如我的：ping garfield.github.io\n```\n\n![image-20210311162050096](https://i.loli.net/2021/03/11/lC4ptyU7fNeciOR.png)\n\n即可得到我们需要的值，填入即可。\n\n记住，还要再添加一个主机记录为@的，其他填法不变。\n\n![image-20210311162246255](https://i.loli.net/2021/03/11/g7vxJZfXQGVq9ke.png)\n\n至此，阿里云的域名注册解析部分已经成功完成，接下来看GitHub这里，就简单了。\n\n### GitHub绑定域名\n\n来到自己的博客项目主页，添加新文件名为CNAME，然后在这个文件内填写自己刚注册的域名\n\n![image-20210311162530464](https://i.loli.net/2021/03/11/c6HWe1TRA2GOrnQ.png)\n\n保存提交，大功告成！\n\n### 注意\n\n域名映射需要一定时间，请等待10分钟左右，即可正常访问自己的个人站点。\n\n![image-20210311162653292](https://i.loli.net/2021/03/11/YADSXLhGnuQgOy8.png)\n\n","tags":["GitHub","域名"],"categories":["Git","记录"]},{"title":"JetBrains全家桶好用的IDE插件","url":"/post/5e63e1c2.html","content":"\n\n\n### 为什么写这篇文章\n\nJetBrains系列的IDE如PyCharm、Idea、PhpStorm等已经家喻户晓（在程序员界），强大的功能是他能成为中流砥柱的重要原因之一。但是，如此强大并不妨碍它形成更加强大的插件生态。接下来安利一些非常好用的插件。\n\n### 如何安装插件\n\n以PyCharm为例（其他都一样），File->Settins->Plugins，然后在商店搜索下载即可（部分插件可能需要其他操作，但是不难）\n\n### 开始安利\n\n#### Key Promoter X\n\n![image-20210310083711314](https://i.loli.net/2021/03/10/fEM7zrVtsWIDjAx.png)\n\n键盘操作如果熟悉的话，效率一定高于鼠标，但是，这么多的快捷键，我怎么能记得住呢？安装这款插件后，每当你进行一次操作，如果有对应的快捷键，这款插件会在右下角给出这个操作的快捷键，这样，你就会慢慢记住更多的快捷键，办公效率会不断提升。\n\n#### Kite\n\n代码智能提示，智能程度远超IDE自带的代码提示，因为这是基于深度学习实现的。可以看这个[安装教程](https://juejin.cn/post/6844904025045860360)。\n\n![image-20210310084229542](https://i.loli.net/2021/03/10/XdUNC5fspZVqSzE.png)\n\n#### Translation\n\n写代码的时候不知道怎么翻译成合适的英文？遇到奇怪的单词看不懂了？用这个，支持多种语言的翻译，直接在IDE中选中单词右键即可。\n\n![image-20210310084404682](https://i.loli.net/2021/03/10/1FYtWu8BaUjdJzQ.png)\n\n#### leetcode editor\n\n你以为我在写代码，其实我在摸鱼刷题（不是）。在IDE中直接刷leetcode的题。需要设置登录账号密码以及编程语言。\n\n![image-20210310084603825](https://i.loli.net/2021/03/10/VGAOKY6s2eWPBN8.png)\n\n#### Rainbow Brackets\n\n![image-20210331165442485](https://i.loli.net/2021/03/31/f3jhVZA6kmdBeQE.png)\n\n给括号加颜色，方便区分。比如下图，看起来是不是清晰很多：\n\n![image-20210331165532703](https://i.loli.net/2021/03/31/mg7IjiOHX4c8WbG.png)\n\n\n\n### 未完待续... ...\n\n\n\n\n\n","tags":["记录"],"categories":["记录"]},{"title":"Linux发展史","url":"/post/fcf19b50.html","content":"\n\n\n### Linux发展史\n\n#### 1. Linux概述\n\nLinux是一套免费使用和自由传播的类Unix操作系统，是一个基于POSIX和UNIX的多用户、多任务、支持多线程和多CPU的操作系统。它能运行主要的UNIX工具软件、应用程序和网络协议。它支持32位和64位硬件。Linux继承了Unix以网络为核心的设计思想，是一个性能稳定的都用户网络操作系统。\n\nLinux操作系统诞生于1991年10月5日。Linux存在着许多不同的Linux版本，但它们都使用了Linux内核。Linux可安装在各种计算机硬件设备中，比如手机、平板电脑、路由器、视频游戏控制台、台式计算机、大型机和超级计算机。\n\n严格来讲，Linux这个词本身只表示Linux内核，但实际上人们已经习惯了用Linux来形容整个基于Linux内核，并且使用GNU工程各种工具和数据库的操作系统。\n\n#### 2. Linux简史\n\nLinux操作系统的诞生、发展和成长过程始终依赖着五个重要支柱：UNIX操作系统、MINIX操作系统、GNU计划、POXIS标准和Internet网络。\n\n1981年IBM公司推出微型计算机IBM PC。\n\n1991年，GNU计划已经开发出了许多工具软件，最受期盼的GNU C编译器已经出现，GNU的操作系统核心HURD一直处于实验阶段，没有任何可用性，实质上也没能开发出完整的GNU操作系统，但是GNU奠定了Linux用户基础和开发环境。\n\n1991年初，林纳斯托瓦兹开始在一台386sx兼容微机上学习minix操作系统。1991年4月，林纳斯·托瓦兹开始酝酿并着手编制自己的操作系统。\n\n1991年的10月5日，林纳斯·托瓦兹在comp.os.minix新闻组上发布消息，正式向外宣布Linux内核的诞生(**Freeminix-like**kernel sources for 386-AT)。\n\n1993年，大约有100余名程序员参与了Linux内核代码编写/修改工作，其中核心组由5人组成，此时Linux 0.99的代码大约有十万行，用户大约有10万左右。\n\n1994年3月，Linux1.0发布，代码量17万行，当时是按照完全自由免费的协议发布，随后正式采用GPL协议。\n\n1995年1月，Bob Young创办了RedHat（小红帽），以GNU/Linux为核心，集成了400多个源代码开放的程序模块，搞出了一种冠以品牌的Linux，即RedHat Linux,称为Linux\"发行版\"，在市场上出售。这在经营模式上是一种创举。\n\n1996年6月，Linux 2.0内核发布，此内核有大约40万行代码，并可以支持多个处理器。此时的Linux 已经进入了实用阶段，全球大约有350万人使用。\n\n1998年2月，以Eric Raymond为首的一批年轻的\"老牛羚骨干分子\"终于认识到GNU/Linux体系的产业化道路的本质，并非是什么自由哲学，而是市场竞争的驱动，创办了\"Open Source Intiative\"（开放源代码促进会）\"复兴\"的大旗，在互联网世界里展开了一场历史性的Linux产业化运动。\n\n2001年1月，Linux 2.4发布，它进一步地提升了SMP系统的扩展性，同时它也集成了很多用于支持桌面系统的特性：USB，PC卡（PCMCIA）的支持，内置的即插即用，等等功能。\n\n2003年12月，Linux 2.6版内核发布，相对于2.4版内核2.6在对系统的支持都有很大的变化。\n\n2004年的第1月，SuSE嫁到了Novell，SCO继续顶着骂名四处强行“化缘”， Asianux， MandrakeSoft也在五年中首次宣布季度赢利。3月，SGI宣布成功实现了Linux操作系统支持256个Itanium 2处理器。\n\n#### 3. Linux主要特性\n\n* 基本思想\n\n  Linux的基本思想有两点：第一，一切都是文件；第二，每个软件都有确定的用途。其中第一条详细来讲就是系统中的所有都归结为一个文件，包括命令、硬件和软件设备、操作系统、进程等等对于操作系统内核而言，都被视为拥有各自特性或类型的文件。至于说Linux是基于Unix的，很大程度上也是因为这两者的基本思想十分相近。\n\n* 完全免费\n\n  Linux是一款免费的操作系统，用户可以通过网络或其他途径免费获得，并可以任意修改其源代码。这是其他操作系统所做不到的。正是由于这一点，来自全世界的无数程序员参与了Linux的修改、编写工作，程序员可以根据自己的兴趣和灵感对其进行改变，这让Linux吸收了无数程序员的精华，不断壮大。\n\n* 完全兼容POSIX1.0标准\n\n  这使得可以在Linux下通过相应的模拟器运行常见的DOS、Windows的程序。这为用户从Windows转到Linux奠定了基础。许多用户在考虑使用Linux时，就想到以前在Windows下常见的程序是否能正常运行，这一点就消除了他们的疑虑。\n\n* 多用户、多任务\n\n  Linux支持多用户，各个用户对于自己的文件设备有自己特殊的权利，保证了各用户之间互不影响。多任务则是现在电脑最主要的一个特点，Linux可以使多个程序同时并独立地运行。\n\n* 良好的界面\n\n  Linux同时具有字符界面和图形界面。在字符界面用户可以通过键盘输入相应的指令来进行操作。它同时也提供了类似Windows图形界面的X-Window系统，用户可以使用鼠标对其进行操作。在X-Window环境中就和在Windows中相似，可以说是一个Linux版的Windows。\n\n* 支持多种平台\n\n  Linux可以运行在多种硬件平台上，如具有x86、680x0、SPARC、Alpha等处理器的平台。此外Linux还是一种嵌入式操作系统，可以运行在掌上电脑、机顶盒、或游戏机上。2001年1月份发布的Linux2.4版内核已经能够完全支持Intel 64位芯片架构。同时Linux也支持多处理器技术。多个处理器同时工作，使系统性能大大提高。\n\n#### 4. Linux应用领域\n\n* 服务器领域\n\n  Linux系统最显著的优点便是稳定，这是企业服务器对系统的首要要求。此外，Linux系统是自由软件，还具备体积小、价位低、可定制等优点，可用于搭建Web、数据库、邮件、DNS、FTP等各种服务器。总的来说，使用Linux搭建的服务器不仅功能齐全、稳定性高、运营成本小，还无需考虑版权问题，因此Linux系统逐渐渗入到了电信、政府、教育、银行、金融等各个行业，在服务器领域的应用也越来越广泛。\n\n* 嵌入式应用领域\n\n  由于具有成本低廉、可设定性强等特点，Linux在嵌入式应用领域的使用也极其广泛，从路由器、交换机、防火墙等因特网设备，到冰箱、空调等各种家用电器，以及自动贩卖机等专用的控制系统都有Linux系统的身影。此外，Linux也是目前移动设备上常用的操作系统之一。\n\n* 个人桌面领域\n\n  虽然Linux系统还是一个侧重于命令行的系统，但近些年Linux系统也在向桌面系统领域靠拢，如今的Linux系统大多都搭建了图形界面，大大降低了普通用户的操作难度，如Ubuntu系统已经拥有了良好的桌面，完全可以满足日常办公需求。\n\n#### 5. Linux发行版本介绍\n\n* 5.1 Ubuntu\n\n  Ubuntu是Debian的一款衍生版，也是当今最受欢迎的免费操作系统。Ubuntu侧重于它在这个市场的应用，在服务器、云计算、甚至一些运行Ubuntu Linux的移动设备上很常见。作为Debian Gnu Linux的一款衍生版，Ubuntu的进程、外观和感觉大多数仍然与Debian一样。它使用apt软件管理工具来安装和更新软件。它也是如今市面上用起来最容易的发行版之一。Ubuntu使用基于apt的程序包管理器。\n\n  Ubuntu是新手用户肯定爱不释手的一款操作系统。\n\n* 5.2 RedHat\n\n  Redhat（小红帽），应该称为Redhat系列，包括RHEL(Redhat Enterprise Linux，也就是所谓的Redhat Advance Server，收费版本)、Fedora Core(由原来的Redhat桌面版本发展而来，免费版本)、CentOS(RHEL的社区克隆版本，免费)。Redhat应该说是在国内使用人群最多 的Linux版本，甚至有人将Redhat等同于Linux，而有些老鸟更是只用这一个版本的Linux。所以这个版本的特点就是使用人群数量大，资料非常多，言下之意就是如果你有什么不明白的地方，很容易找到人来问，而且网上的一般Linux教程都是以Redhat为例来讲解的。Redhat系列的包管理方式采用的是基于RPM包的YUM包管理方式，包分发方式是编译好的二进制文件。稳定性方面RHEL和CentOS的稳定性非常好，适合于服务器使用， 但是Fedora Core的稳定性较差，最好只用于桌面应用。\n\n* 5.3 Debian\n\n  Debian运行起来极其稳定，这使得它非常适合用于服务器。Debian平时维护三套正式的软件库和一套非免费软件库，这给另外几款发行版(比如Ubuntu和Kali等)带来了灵感。Debian这款操作系统派生出了多个Linux发行版。它有37500多个软件包，这方面唯一胜过Debian的其他发行版只有Gentoo。Debian使用apt或aptitude来安装和更新软件。\n\n  Debian这款操作系统无疑并不适合新手用户，而是适合系统管理员和高级用户。Debian支持如今的大多数架构(处理器)。\n\n* 5.4 Gentoo\n\n  与Debian一样，Gentoo这款操作系统也包含数量众多的软件包。Gentoo并非以预编译的形式出现，而是每次需要针对每个系统进行编译。连Gentoo社区都觉得Gentoo安装和使用起来很困难；不过它被认为是最佳学习对象，可以进而了解Linux操作系统的内部运作原理。提到Gentoo总有人这么说：”如果你要学用Linux发行版，那就学用该发行版吧；如果你学会了Gentoo，也就学会了Linux。“Gentoo使用portage来安装和更新软件。\n\n  Gentoo这款操作系统适合对Linux已经完全驾轻就熟的那些用户。\n\n* 5.5 CentOS\n\n  CentOS是一款企业级Linux发行版，它使用红帽企业级Linux中的免费源代码重新构建而成。这款重构版完全去掉了注册商标以及Binary程序包方面一个非常细微的变化。有些人不想支付一大笔钱，又能领略红帽企业级Linux；对他们来说，CentOS值得一试。此外，CentOS的外观和行为似乎与母发行版红帽企业级Linux如出一辙。 CentOS使用YUM来管理软件包。\n\n  非常稳定的程序包；要是想在桌面端测试一下服务器的运作原理，都应该试试这款操作系统。\n\n* 5.6 Fedora\n\n  小巧的Fedora适合那些人：想尝试最先进的技术，等不及程序的稳定版出来。其实，Fedora就是红帽公司的一个测试平台；产品在成为企业级发行版之前，在该平台上进行开发和测试。Fedora是一款非常好的发行版，有庞大的用户论坛，软件库中还有为数不少的软件包。Fedora同样使用YUM来管理软件包。\n\n* 5.7 Kali Linux\n\n  Kali Linux是Debian的一款衍生版。Kali旨在用于渗透测试。Kali的前身是Backtrack。用于Debian的所有Binary软件包都可以安装到Kali Linux上，而Kali的魅力或威力就来自于此。此外，支持Debian的用户论坛为Kali加分不少。Kali随带许多的渗透测试工具，无论是Wifi、数据库还是其他任何工具，都设计成立马可以使用。Kali使用APT来管理软件包。\n\n  毫无疑问，Kali Linux是一款渗透测试工具，或者是文明黑客青睐的操作系统。\n\n* 5.8 Arch Linux\n\n  Arch是一款采用滚动发行方式的操作系统：只要安装一次就够了；每当发行了某个新版本，就可以升级发行版，不需要重新安装。Pacman是Arch Linux的软件包管理器。Arch Linux既支持X86处理器架构，又支持X86_64架构，安装程序可以从光盘或U盘来运行。Arch旨在从开发者的角度而不是从用户的角度做到力求简单。Arch配置和安装起来超容易。它真是一款面向高手的发行版，让你可以了解Linux系统的每一个细枝末节。\n\n* 5.9 OpenSuse\n\n  OpenSuse这款Linux发行版是免费的，并不供商业用途使用，仍然供个人使用。OpenSuse的真正竞争对手是红帽企业级Linux。它使用Yast来管理软件包。有了Yast，使用和管理服务器应用程序就非常容易。此外，Yast安装向导程序可以配置电子邮件服务器、LDAP服务器、文件服务器或Web服务器，没有任何不必要的麻烦。它随带snapper快照管理工具，因而可以恢复或使用旧版的文件、更新和配置。由于让滚动发行版本成为可能的Tumbleweed，可将已安装的操作系统更新到最新版本，不需要任何的新发行版。\n\n  SUSE在管理员当中的名气更大，因为它有Yast以及让系统管理员能够自动管理任务的其他此类应用程序，同样水准的其他发行版没有这项功能。\n\n","tags":["知识"],"categories":["Linux"]},{"title":"CentOS部署MySQL","url":"/post/af6628ae.html","content":"\n### CentOS7 MySQL数据库安装和配置\n\n#### 一、系统环境\n\n`yum update`升级以后的系统版本为：\n\n```shell\n[root@localhost garfield]# cat /etc.redhat-release\nCentOS Linux release 7.8.2003(core)\n```\n\n#### 二、MySQL安装\n\n依次输入下列命令进行安装。\n\n```shell\n# yum install mysql\n# yum install mysql-devel\n# yum install mysql-server\n```\n\n安装mysql和mysql-devel都成功，但是安装mysql-server失败，如下：\n\n```shell\n[root@localhost garfield]# yum install mysql-server\nLoaded plugins: fastestmirror\nLoading mirror speeds from cached hostfile\n * base: mirrors.sina.cn\n * extras: mirrors.sina.cn\n * updates: mirrors.sina.cn\nNo package mysql-server available.\nError: Nothing to do\n```\n\n原因是CentOS7版本将MySQL数据库软件从默认的程序列表中移除，用mariadb代替了。下面给出解决方法：\n\n##### 官网下载安装mysql-server\n\n依次输入下列命令：\n\n```shell\n# wget http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm\n# rpm -ivh mysql-community-release-el7-5.noarch.rpm\n# yum install mysql-community-server\n```\n\n安装成功后重启MySQL服务。\n\n```shell\n# service mysqld restart\n```\n\n初次安装MySQL，root账户没有密码。\n\n```shell\n[root@localhost garfield]# mysql -u root \nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 3\nServer version: 5.6.26 MySQL Community Server (GPL)\n\nCopyright (c) 2000, 2015, Oracle and/or its affiliates. All rights reserved.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nmysql> show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| mysql              |\n| performance_schema |\n| test               |\n+--------------------+\n4 rows in set (0.01 sec)\n\nmysql>\n```\n\n设置密码。\n\n```mysql\nmysql> set password for 'root'@'localhost' =password('password');\nQuery OK, 0 rows affected (0.00 sec)\n```\n\n安装完以后，mariadb自动被替换，将不再生效，使用下列的命令将其移除：\n\n```shell\n[root@localhost garfield]# rpm -qa |grep mariadb\n```\n\n#### 三、配置MySQL\n\n##### 1. 编码\n\nMySQL配置文件为/etc/my.cnf\n\n最后加上编码配置。\n\n```shell\n[mysql]\ndefault-character-set =utf8\n```\n\n##### 2. 远程连接设置\n\n把在所有数据库的所有表的所有权限赋值给位于所有IP地址的root用户。\n\n```mysql\nmysql> grant all privileges on *.* to root@'%'identified by 'password';\n```\n\n如果是新用户而不是root，则要先新建用户。\n\n```mysql\nmysql>create user 'username'@'%' identified by 'password';\n```\n\n此时就可以进行远程连接了。\n\n","tags":["知识"],"categories":["Linux","MySQL"]},{"title":"有用命令","url":"/post/a92f9037.html","content":"\n记录一些有用的命令\n\n<!-- more -->\n\n#### 生成密钥\n\n```shell\n1. 在桌面打开Git Bash Here\n2. git config --global user.name \"yourname\"\n3. git config --global user.email \"youremail\"\n4. ssh-keygen -t rsa -C \"youremail\"\n5. 复制id_rsa.pub内容至公钥\n```\n\n#### 查看用户名和邮箱地址\n\n```shell\ngit config user.name\ngit config user.email\n```\n\n#### Windows10 开机自启动软件的目录\n\n`C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp`\n\n#### Windows上iTunes备份的位置\n\n`C:\\Users\\用户\\AppData\\Roaming\\Apple Computer\\MobileSync\\Backup`\n\n#### Typora中文状态下输入英文符号\n\n`ctrl + .`即可改回中文输入状态输出中文符号\n\n#### MySQL连接远程数据库\n\n```mysql\nmysql -h \"host\" -P 3306 -u root -p\n```\n\n#### MySQL在不清空数据的情况下重置id自增长\n\n```mysql\nalter table 表名 drop id;\nalter table 表名 add id int primary key not null auto_increment first;\n```\n\n","tags":["知识"],"categories":["知识"]},{"title":"Hello World","url":"/post/4a17b156.html","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n<!-- more -->\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n"}]